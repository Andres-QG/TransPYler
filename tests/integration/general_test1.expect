CLASS "class"
ID "MyClass123"
COLON ":"

INDENT
DEF "def"
ID "__init__"
LPAREN "("
ID "self"
COMMA ","
ID "value"
ASSIGN "="
NUMBER "42"
COMMA ","
ID "name"
ASSIGN "="
STRING "default"
RPAREN ")"
COLON ":"

INDENT
ID "self"
DOT "."
ID "value"
ASSIGN "="
ID "value"

ID "self"
DOT "."
ID "name"
ASSIGN "="
ID "name"

IF "if"
ID "self"
DOT "."
ID "value"
GREATER_THAN ">"
NUMBER "0"
AND "and"
ID "self"
DOT "."
ID "name"
NOT_EQUALS "!="
STRING ""
COLON ":"

INDENT
ID "print"
LPAREN "("
STRING "Valid instance"
RPAREN ")"

DEDENT
ELSE "else"
COLON ":"

INDENT
ID "print"
LPAREN "("
STRING "Invalid instance"
RPAREN ")"

DEDENT
DEDENT
DEF "def"
ID "compute"
LPAREN "("
ID "self"
COMMA ","
ID "x"
COMMA ","
ID "y"
RPAREN ")"
COLON ":"

INDENT
ID "result"
ASSIGN "="
LPAREN "("
ID "x"
PLUS "+"
ID "y"
RPAREN ")"
TIMES "*"
NUMBER "3.14"
MINUS "-"
NUMBER "2"
POWER "**"
NUMBER "5"

ID "result"
DIVIDE_ASSIGN "/="
NUMBER "10"

ID "result"
MOD_ASSIGN "%="
NUMBER "7"

ID "result"
FLOOR_DIVIDE_ASSIGN "//="
NUMBER "2"

ID "result"
PLUS_ASSIGN "+="
NUMBER "1"

ID "result"
MINUS_ASSIGN "-="
NUMBER "2"

RETURN "return"
ID "result"

DEDENT
DEDENT
DEF "def"
ID "factorial"
LPAREN "("
ID "n"
RPAREN ")"
COLON ":"

INDENT
IF "if"
ID "n"
LESS_THAN_EQUALS "<="
NUMBER "1"
COLON ":"

INDENT
RETURN "return"
NUMBER "1"

DEDENT
ELSE "else"
COLON ":"

INDENT
RETURN "return"
ID "n"
TIMES "*"
ID "factorial"
LPAREN "("
ID "n"
MINUS "-"
NUMBER "1"
RPAREN ")"

DEDENT
DEDENT
ID "foo_bar123"
ASSIGN "="
NUMBER "99"

ID "__hidden__"
ASSIGN "="
STRING "secret"

ID "CamelCaseVar"
ASSIGN "="
TRUE "True"

ID "snake_case_var"
ASSIGN "="
FALSE "False"

ID "loooooooong_identifier_name_with_1234567890_and_UPPERCASE"
ASSIGN "="
NUMBER "3.14159e-10"

ID "escaped"
ASSIGN "="
STRING "Line1\nLine2\tTabbed\Backslash\"Quote'Quote"

ID "multi"
ASSIGN "="
STRING "This is a long string with line continuation"

ID "numbers"
ASSIGN "="
LBRACKET "["
NUMBER "1"
COMMA ","
NUMBER "2"
COMMA ","
NUMBER "3"
COMMA ","
NUMBER "4"
RBRACKET "]"

ID "mapping"
ASSIGN "="
LBRACE "{"
STRING "a"
COLON ":"
NUMBER "1"
COMMA ","
STRING "b"
COLON ":"
NUMBER "2"
RBRACE "}"

ID "unique"
ASSIGN "="
LBRACE "{"
NUMBER "1"
COMMA ","
NUMBER "2"
COMMA ","
NUMBER "3"
RBRACE "}"

ID "cond"
ASSIGN "="
LPAREN "("
NUMBER "5"
LESS_THAN "<"
NUMBER "6"
RPAREN ")"
AND "and"
LPAREN "("
NUMBER "7"
GREATER_THAN_EQUALS ">="
NUMBER "3"
RPAREN ")"
OR "or"
NOT "not"
LPAREN "("
NUMBER "4"
EQUALS "=="
NUMBER "2"
OR "or"
NUMBER "3"
NOT_EQUALS "!="
NUMBER "1"
RPAREN ")"

FOR "for"
ID "i"
IN "in"
ID "numbers"
COLON ":"

INDENT
IF "if"
ID "i"
MOD "%"
NUMBER "2"
EQUALS "=="
NUMBER "0"
COLON ":"

INDENT
CONTINUE "continue"

DEDENT
ELIF "elif"
ID "i"
EQUALS "=="
NUMBER "3"
COLON ":"

INDENT
BREAK "break"

DEDENT
ELSE "else"
COLON ":"

INDENT
PASS "pass"

DEDENT
DEDENT
WHILE "while"
ID "foo_bar123"
GREATER_THAN ">"
NUMBER "0"
COLON ":"

INDENT
ID "foo_bar123"
MINUS_ASSIGN "-="
NUMBER "1"

DEDENT
ID "illegal_char"
ASSIGN "="
Line 63: Illegal character '@'
Line 63: Illegal character '@'
Line 63: Illegal character '@'

