CLASS "class"
ID "MyClass123"
COLON ":"
NEWLINE
INDENT
DEF "def"
ID "__init__"
LPAREN "("
ID "self"
COMMA ","
ID "value"
ASSIGN "="
NUMBER "42"
COMMA ","
ID "name"
ASSIGN "="
STRING "default"
RPAREN ")"
COLON ":"
NEWLINE
INDENT
ID "self"
DOT "."
ID "value"
ASSIGN "="
ID "value"
NEWLINE
ID "self"
DOT "."
ID "name"
ASSIGN "="
ID "name"
NEWLINE
IF "if"
ID "self"
DOT "."
ID "value"
GREATER_THAN ">"
NUMBER "0"
AND "and"
ID "self"
DOT "."
ID "name"
NOT_EQUALS "!="
STRING ""
COLON ":"
NEWLINE
INDENT
ID "print"
LPAREN "("
STRING "Valid instance"
RPAREN ")"
NEWLINE
DEDENT
ELSE "else"
COLON ":"
NEWLINE
INDENT
ID "print"
LPAREN "("
STRING "Invalid instance"
RPAREN ")"
NEWLINE
DEDENT
DEDENT
DEF "def"
ID "compute"
LPAREN "("
ID "self"
COMMA ","
ID "x"
COMMA ","
ID "y"
RPAREN ")"
COLON ":"
NEWLINE
INDENT
ID "result"
ASSIGN "="
LPAREN "("
ID "x"
PLUS "+"
ID "y"
RPAREN ")"
TIMES "*"
NUMBER "3.14"
MINUS "-"
NUMBER "2"
POWER "**"
NUMBER "5"
NEWLINE
ID "result"
DIVIDE_ASSIGN "/="
NUMBER "10"
NEWLINE
ID "result"
MOD_ASSIGN "%="
NUMBER "7"
NEWLINE
ID "result"
FLOOR_DIVIDE_ASSIGN "//="
NUMBER "2"
NEWLINE
ID "result"
PLUS_ASSIGN "+="
NUMBER "1"
NEWLINE
ID "result"
MINUS_ASSIGN "-="
NUMBER "2"
NEWLINE
RETURN "return"
ID "result"
NEWLINE
DEDENT
DEDENT
DEF "def"
ID "factorial"
LPAREN "("
ID "n"
RPAREN ")"
COLON ":"
NEWLINE
INDENT
IF "if"
ID "n"
LESS_THAN_EQUALS "<="
NUMBER "1"
COLON ":"
NEWLINE
INDENT
RETURN "return"
NUMBER "1"
NEWLINE
DEDENT
ELSE "else"
COLON ":"
NEWLINE
INDENT
RETURN "return"
ID "n"
TIMES "*"
ID "factorial"
LPAREN "("
ID "n"
MINUS "-"
NUMBER "1"
RPAREN ")"
NEWLINE
DEDENT
DEDENT
ID "foo_bar123"
ASSIGN "="
NUMBER "99"
NEWLINE
ID "__hidden__"
ASSIGN "="
STRING "secret"
NEWLINE
ID "CamelCaseVar"
ASSIGN "="
TRUE "True"
NEWLINE
ID "snake_case_var"
ASSIGN "="
FALSE "False"
NEWLINE
ID "loooooooong_identifier_name_with_1234567890_and_UPPERCASE"
ASSIGN "="
NUMBER "3.14159e-10"
NEWLINE
ID "escaped"
ASSIGN "="
STRING "Line1\nLine2\tTabbed\Backslash\"Quote'Quote"
NEWLINE
ID "multi"
ASSIGN "="
STRING "This is a long string with line continuation"
NEWLINE
ID "numbers"
ASSIGN "="
LBRACKET "["
NUMBER "1"
COMMA ","
NUMBER "2"
COMMA ","
NUMBER "3"
COMMA ","
NUMBER "4"
RBRACKET "]"
NEWLINE
ID "mapping"
ASSIGN "="
LBRACE "{"
STRING "a"
COLON ":"
NUMBER "1"
COMMA ","
STRING "b"
COLON ":"
NUMBER "2"
RBRACE "}"
NEWLINE
ID "unique"
ASSIGN "="
LBRACE "{"
NUMBER "1"
COMMA ","
NUMBER "2"
COMMA ","
NUMBER "3"
RBRACE "}"
NEWLINE
ID "cond"
ASSIGN "="
LPAREN "("
NUMBER "5"
LESS_THAN "<"
NUMBER "6"
RPAREN ")"
AND "and"
LPAREN "("
NUMBER "7"
GREATER_THAN_EQUALS ">="
NUMBER "3"
RPAREN ")"
OR "or"
NOT "not"
LPAREN "("
NUMBER "4"
EQUALS "=="
NUMBER "2"
OR "or"
NUMBER "3"
NOT_EQUALS "!="
NUMBER "1"
RPAREN ")"
NEWLINE
FOR "for"
ID "i"
IN "in"
ID "numbers"
COLON ":"
NEWLINE
INDENT
IF "if"
ID "i"
MOD "%"
NUMBER "2"
EQUALS "=="
NUMBER "0"
COLON ":"
NEWLINE
INDENT
CONTINUE "continue"
NEWLINE
DEDENT
ELIF "elif"
ID "i"
EQUALS "=="
NUMBER "3"
COLON ":"
NEWLINE
INDENT
BREAK "break"
NEWLINE
DEDENT
ELSE "else"
COLON ":"
NEWLINE
INDENT
PASS "pass"
NEWLINE
DEDENT
DEDENT
WHILE "while"
ID "foo_bar123"
GREATER_THAN ">"
NUMBER "0"
COLON ":"
NEWLINE
INDENT
ID "foo_bar123"
MINUS_ASSIGN "-="
NUMBER "1"
NEWLINE
DEDENT
ID "illegal_char"
ASSIGN "="
ERROR "@"
ERROR "@"
ERROR "@"
NEWLINE
