DEF "def"
ID "random_operation"
LPAREN "("
ID "a"
COMMA ","
ID "b"
RPAREN ")"
COLON ":"
INDENT
ID "c"
ASSIGN "="
ID "a"
PLUS "+"
ID "b"
RETURN "return"
ID "c"
PLUS "+"
ID "a"
TIMES "*"
ID "b"
PLUS "+"
NUMBER "2.6548"
DEDENT

DEF "def"
ID "fibonacci"
LPAREN "("
ID "n"
RPAREN ")"
COLON ":"
INDENT
IF "if"
ID "n"
EQUALS "=="
NUMBER "1"
OR "or"
ID "n"
EQUALS "=="
NUMBER "2"
COLON ":"
INDENT
RETURN "return"
NUMBER "1"
DEDENT
ELIF "elif"
ID "n"
EQUALS "=="
NUMBER "0"
COLON ":"
INDENT
RETURN "return"
ID "n"
DIVIDE "/"
NUMBER "0"
DEDENT
ELSE "else"
COLON ":"
INDENT
RETURN "return"
ID "fibonacci"
LPAREN "("
ID "n"
MINUS "-"
NUMBER "1"
RPAREN ")"
PLUS "+"
ID "fibonacci"
LPAREN "("
ID "n"
MINUS "-"
NUMBER "2"
RPAREN ")"
DEDENT
DEDENT

DEF "def"
ID "fibonacci_d"
LPAREN "("
ID "n"
RPAREN ")"
COLON ":"
INDENT
ID "n_1"
ASSIGN "="
NUMBER "1"
ID "n_2"
ASSIGN "="
NUMBER "1"
WHILE "while"
LPAREN "("
ID "n_1"
LESS_THAN "<"
ID "n"
RPAREN ")"
COLON ":"
INDENT
ID "new"
ASSIGN "="
ID "n_1"
PLUS "+"
ID "n_2"
ID "n_2"
ASSIGN "="
ID "n_1"
ID "n_1"
ASSIGN "="
ID "new"
RETURN "return"
ID "n_1"
DEDENT
DEDENT

DEF "def"
ID "iter_example"
LPAREN "("
RPAREN ")"
COLON ":"
INDENT
ID "l"
ASSIGN "="
LBRACKET "["
NUMBER "1"
COMMA ","
NUMBER "2.5"
COMMA ","
NUMBER "3"
COMMA ","
STRING "hola"
COMMA ","
NUMBER "5"
COMMA ","
STRING "mundo"
RBRACKET "]"
ID "it"
ASSIGN "="
ID "iter"
LPAREN "("
ID "l"
RPAREN ")"
FOR "for"
ID "i"
IN "in"
ID "l"
COLON ":"
INDENT
ID "print"
LPAREN "("
ID "next"
LPAREN "("
ID "it"
RPAREN ")"
RPAREN ")"
DEDENT
RETURN "return"
TRUE "True"
DEDENT

DEF "def"
ID "map_ex"
LPAREN "("
RPAREN ")"
COLON ":"
INDENT
ID "d"
ASSIGN "="
LBRACE "{"
STRING "hola"
COLON ":"
STRING "mundo"
COMMA ","
NUMBER "1"
COLON ":"
LBRACKET "["
NUMBER "1"
COMMA ","
NUMBER "2"
COMMA ","
NUMBER "3"
COMMA ","
NUMBER "4"
COMMA ","
NUMBER "5"
RBRACKET "]"
COMMA ","
STRING "dict"
COLON ":"
LBRACE "{"
STRING "adios"
COLON ":"
STRING ":D"
RBRACE "}"
RBRACE "}"
FOR "for"
ID "k"
IN "in"
ID "d"
DOT "."
ID "keys"
LPAREN "("
RPAREN ")"
COLON ":"
INDENT
ID "print"
LPAREN "("
ID "d"
LBRACKET "["
ID "k"
RBRACKET "]"
RPAREN ")"
DEDENT
RETURN "return"
STRING "hola"
PLUS "+"
STRING "mundo"
DEDENT

DEF "def"
ID "default_ex"
LPAREN "("
ID "a"
ASSIGN "="
STRING "hola'"
RPAREN ")"
COLON ":"
INDENT
RETURN "return"
LPAREN "("
ID "a"
RPAREN ")"
DEDENT

DEF "def"
ID "set_ex"
LPAREN "("
RPAREN ")"
COLON ":"
INDENT
ID "a"
ASSIGN "="
LBRACE "{"
NUMBER "1"
COMMA ","
NUMBER "2"
COMMA ","
STRING "hola"
COMMA ","
NUMBER "4"
COMMA ","
NUMBER "5"
RBRACE "}"
RETURN "return"
NUMBER "2"
IN "in"
ID "a"
DEDENT

DEF "def"
ID "tuple_ex"
LPAREN "("
RPAREN ")"
COLON ":"
INDENT
ID "a"
ASSIGN "="
LPAREN "("
NUMBER "5"
COMMA ","
NUMBER "6"
COMMA ","
STRING "joseph"
RPAREN ")"
ID "b"
ASSIGN "="
LPAREN "("
NUMBER "1"
COMMA ","
NUMBER "2"
COMMA ","
STRING "valverde"
RPAREN ")"
RETURN "return"
ID "a"
PLUS "+"
ID "b"
DEDENT

DEF "def"
ID "slices_ex"
LPAREN "("
RPAREN ")"
COLON ":"
INDENT
ID "l"
ASSIGN "="
LBRACKET "["
NUMBER "1"
COMMA ","
NUMBER "2"
COMMA ","
NUMBER "3"
COMMA ","
NUMBER "4"
COMMA ","
NUMBER "5"
COMMA ","
NUMBER "6"
COMMA ","
NUMBER "7"
COMMA ","
NUMBER "7"
COMMA ","
NUMBER "8"
COMMA ","
NUMBER "9"
RBRACKET "]"
ID "print"
LPAREN "("
ID "l"
LBRACKET "["
MINUS "-"
NUMBER "2"
RBRACKET "]"
RPAREN ")"
ID "print"
LPAREN "("
ID "l"
LBRACKET "["
NUMBER "1"
COLON ":"
MINUS "-"
NUMBER "2"
RBRACKET "]"
RPAREN ")"
ID "k"
ASSIGN "="
ID "l"
LBRACKET "["
NUMBER "1"
COLON ":"
NUMBER "2"
RBRACKET "]"
PLUS "+"
ID "l"
LBRACKET "["
MINUS "-"
NUMBER "3"
COLON ":"
MINUS "-"
NUMBER "4"
RBRACKET "]"
RETURN "return"
LPAREN "("
ID "k"
RPAREN ")"
DEDENT

DEF "def"
ID "string_ex"
LPAREN "("
RPAREN ")"
COLON ":"
INDENT
ID "print"
LPAREN "("
STRING "profe"
LBRACKET "["
NUMBER "2"
COLON ":"
NUMBER "4"
RBRACKET "]"
RPAREN ")"
ID "print"
LPAREN "("
STRING "profe"
LBRACKET "["
NUMBER "2"
COLON ":"
NUMBER "4"
RBRACKET "]"
PLUS "+"
STRING "profe"
LBRACKET "["
NUMBER "0"
COLON ":"
NUMBER "2"
RBRACKET "]"
PLUS "+"
STRING "profe"
LBRACKET "["
MINUS "-"
NUMBER "1"
RBRACKET "]"
RPAREN ")"
ID "print"
LPAREN "("
ID "random_operation"
LPAREN "("
NUMBER "5"
COMMA ","
NUMBER "6"
RPAREN ")"
RPAREN ")"
ID "print"
LPAREN "("
ID "fibonacci"
LPAREN "("
NUMBER "4"
RPAREN ")"
RPAREN ")"
ID "print"
LPAREN "("
ID "fibonacci_d"
LPAREN "("
NUMBER "4"
RPAREN ")"
RPAREN ")"
ID "print"
LPAREN "("
ID "iter_example"
LPAREN "("
RPAREN ")"
RPAREN ")"
ID "print"
LPAREN "("
ID "map_ex"
LPAREN "("
RPAREN ")"
RPAREN ")"
ID "print"
LPAREN "("
ID "default_ex"
LPAREN "("
RPAREN ")"
RPAREN ")"
ID "print"
LPAREN "("
ID "tuple_ex"
LPAREN "("
RPAREN ")"
RPAREN ")"
ID "print"
LPAREN "("
ID "set_ex"
LPAREN "("
RPAREN ")"
RPAREN ")"
ID "print"
LPAREN "("
ID "slices_ex"
LPAREN "("
RPAREN ")"
RPAREN ")"
ID "string_ex"
LPAREN "("
RPAREN ")"
DEDENT
