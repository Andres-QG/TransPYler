
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'moduleleftORleftANDleftEQUALSNOT_EQUALSLESS_THANLESS_THAN_EQUALSGREATER_THANGREATER_THAN_EQUALSleftPLUSMINUSleftTIMESDIVIDEFLOOR_DIVIDEMODrightUPLUSUMINUSNOTrightPOWERAND ASSIGN BREAK CLASS COLON COMMA CONTINUE DEDENT DEF DIVIDE DIVIDE_ASSIGN DOT ELIF ELSE EQUALS FALSE FLOOR_DIVIDE FLOOR_DIVIDE_ASSIGN FOR GREATER_THAN GREATER_THAN_EQUALS ID IF IN INDENT LBRACE LBRACKET LESS_THAN LESS_THAN_EQUALS LPAREN MINUS MINUS_ASSIGN MOD MOD_ASSIGN NEWLINE NONE NOT NOT_EQUALS NUMBER OR PASS PLUS PLUS_ASSIGN POWER POWER_ASSIGN RBRACE RBRACKET RETURN RPAREN STRING TIMES TIMES_ASSIGN TRUE WHILEmodule : statement_liststatement_list : statement\n| statement_list statementexpr : atomexpr : LPAREN expr RPARENatom : NUMBERatom : STRINGatom : TRUEatom : FALSEatom : NONEatom : IDexpr : PLUS expr %prec UPLUSexpr : MINUS expr %prec UMINUSexpr : NOT exprexpr : expr POWER expr %prec POWERexpr : expr TIMES expr\n| expr DIVIDE expr\n| expr FLOOR_DIVIDE expr\n| expr MOD exprexpr : expr PLUS expr\n| expr MINUS exprexpr : expr EQUALS expr\n| expr NOT_EQUALS expr\n| expr LESS_THAN expr\n| expr LESS_THAN_EQUALS expr\n| expr GREATER_THAN expr\n| expr GREATER_THAN_EQUALS exprexpr : expr AND expr\n| expr OR exprexpr : ID LPAREN arg_list_opt RPARENarg_list_opt : expr COMMA arg_list_opt\n| exprarg_list_opt :statement : simple_statement\n| compound_statementsimple_statement : small_stmtsmall_stmt : assignment\n| return_stmt\n| break_stmt\n| continue_stmt\n| pass_stmt\n| exprassignment : ID ASSIGN expr\n| ID PLUS_ASSIGN expr\n| ID MINUS_ASSIGN expr\n| ID TIMES_ASSIGN expr\n| ID DIVIDE_ASSIGN exprreturn_stmt : RETURN expr\n| RETURNbreak_stmt : BREAKcontinue_stmt : CONTINUEpass_stmt : PASScompound_statement : if_stmt\n| while_stmt\n| for_stmt\n| funcdef\n| classdefif_stmt : IF expr COLON suite elif_blocks else_block_optelif_blocks : ELIF expr COLON suite elif_blocks\n|else_block_opt : ELSE COLON suite\n|while_stmt : WHILE expr COLON suitefor_stmt : FOR ID IN expr COLON suitesuite : simple_statement\n| INDENT statement_list DEDENTfuncdef : DEF ID LPAREN param_list_opt RPAREN COLON statement_listparam_list_opt : param COMMA param_list_opt\n| param\n|param : IDclassdef : CLASS ID COLON statement_list'
    
_lr_action_items = {'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,25,26,27,28,29,33,34,35,36,37,38,55,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,90,91,92,93,97,98,99,100,101,102,104,109,110,112,117,120,121,122,126,127,128,129,],[18,18,-2,-34,-35,-36,-53,-54,-55,-56,-57,-37,-38,-39,-40,-41,-42,-11,-49,-50,-51,-52,-4,-6,-7,-8,-9,-10,-3,-11,-48,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-43,-44,-45,-46,-47,-5,18,-60,-65,18,-63,-30,18,-62,18,-58,-66,-64,18,18,-61,-60,-59,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,25,26,27,28,29,33,34,35,36,37,38,55,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,90,91,92,93,97,98,99,100,101,102,104,109,110,112,117,120,121,122,126,127,128,129,],[19,19,-2,-34,-35,-36,-53,-54,-55,-56,-57,-37,-38,-39,-40,-41,-42,-11,-49,-50,-51,-52,-4,-6,-7,-8,-9,-10,-3,-11,-48,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-43,-44,-45,-46,-47,-5,19,-60,-65,19,-63,-30,19,-62,19,-58,-66,-64,19,19,-61,-60,-59,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,25,26,27,28,29,33,34,35,36,37,38,55,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,90,91,92,93,97,98,99,100,101,102,104,109,110,112,117,120,121,122,126,127,128,129,],[20,20,-2,-34,-35,-36,-53,-54,-55,-56,-57,-37,-38,-39,-40,-41,-42,-11,-49,-50,-51,-52,-4,-6,-7,-8,-9,-10,-3,-11,-48,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-43,-44,-45,-46,-47,-5,20,-60,-65,20,-63,-30,20,-62,20,-58,-66,-64,20,20,-61,-60,-59,]),'DEF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,25,26,27,28,29,33,34,35,36,37,38,55,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,90,91,92,93,97,98,99,100,101,102,104,109,110,112,117,120,121,122,126,127,128,129,],[22,22,-2,-34,-35,-36,-53,-54,-55,-56,-57,-37,-38,-39,-40,-41,-42,-11,-49,-50,-51,-52,-4,-6,-7,-8,-9,-10,-3,-11,-48,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-43,-44,-45,-46,-47,-5,22,-60,-65,22,-63,-30,22,-62,22,-58,-66,-64,22,22,-61,-60,-59,]),'CLASS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,25,26,27,28,29,33,34,35,36,37,38,55,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,90,91,92,93,97,98,99,100,101,102,104,109,110,112,117,120,121,122,126,127,128,129,],[24,24,-2,-34,-35,-36,-53,-54,-55,-56,-57,-37,-38,-39,-40,-41,-42,-11,-49,-50,-51,-52,-4,-6,-7,-8,-9,-10,-3,-11,-48,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-43,-44,-45,-46,-47,-5,24,-60,-65,24,-63,-30,24,-62,24,-58,-66,-64,24,24,-61,-60,-59,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,58,59,60,61,62,63,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,96,97,98,99,100,101,102,104,105,109,110,111,112,113,116,117,120,121,122,124,125,126,127,128,129,],[21,21,-2,-34,-35,-36,-53,-54,-55,-56,-57,-37,-38,-39,-40,-41,-42,55,55,57,-11,64,55,66,55,-50,-51,-52,-4,55,55,55,-6,-7,-8,-9,-10,-3,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-11,55,55,55,55,55,55,-48,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,21,21,55,-43,-44,-45,-46,-47,106,-5,21,-60,-65,21,-63,-30,55,21,-62,55,21,21,106,-58,-66,-64,21,21,21,21,-61,-60,-59,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,25,26,27,28,29,33,34,35,36,37,38,55,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,97,98,99,100,101,102,104,109,110,112,113,117,120,121,122,124,125,126,127,128,129,],[25,25,-2,-34,-35,-36,-53,-54,-55,-56,-57,-37,-38,-39,-40,-41,-42,-11,-49,-50,-51,-52,-4,-6,-7,-8,-9,-10,-3,-11,-48,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,25,25,-43,-44,-45,-46,-47,-5,25,-60,-65,25,-63,-30,25,-62,25,25,-58,-66,-64,25,25,25,25,-61,-60,-59,]),'BREAK':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,25,26,27,28,29,33,34,35,36,37,38,55,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,97,98,99,100,101,102,104,109,110,112,113,117,120,121,122,124,125,126,127,128,129,],[26,26,-2,-34,-35,-36,-53,-54,-55,-56,-57,-37,-38,-39,-40,-41,-42,-11,-49,-50,-51,-52,-4,-6,-7,-8,-9,-10,-3,-11,-48,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,26,26,-43,-44,-45,-46,-47,-5,26,-60,-65,26,-63,-30,26,-62,26,26,-58,-66,-64,26,26,26,26,-61,-60,-59,]),'CONTINUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,25,26,27,28,29,33,34,35,36,37,38,55,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,97,98,99,100,101,102,104,109,110,112,113,117,120,121,122,124,125,126,127,128,129,],[27,27,-2,-34,-35,-36,-53,-54,-55,-56,-57,-37,-38,-39,-40,-41,-42,-11,-49,-50,-51,-52,-4,-6,-7,-8,-9,-10,-3,-11,-48,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,27,27,-43,-44,-45,-46,-47,-5,27,-60,-65,27,-63,-30,27,-62,27,27,-58,-66,-64,27,27,27,27,-61,-60,-59,]),'PASS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,25,26,27,28,29,33,34,35,36,37,38,55,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,97,98,99,100,101,102,104,109,110,112,113,117,120,121,122,124,125,126,127,128,129,],[28,28,-2,-34,-35,-36,-53,-54,-55,-56,-57,-37,-38,-39,-40,-41,-42,-11,-49,-50,-51,-52,-4,-6,-7,-8,-9,-10,-3,-11,-48,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,28,28,-43,-44,-45,-46,-47,-5,28,-60,-65,28,-63,-30,28,-62,28,28,-58,-66,-64,28,28,28,28,-61,-60,-59,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,58,59,60,61,62,63,64,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,99,100,101,102,104,105,109,110,111,112,113,117,120,121,122,124,125,126,127,128,129,],[23,23,-2,-34,-35,-36,-53,-54,-55,-56,-57,-37,-38,-39,-40,-41,-42,23,23,63,23,23,-50,-51,-52,-4,23,23,23,-6,-7,-8,-9,-10,-3,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,63,23,23,23,23,23,23,96,-48,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,23,23,23,-43,-44,-45,-46,-47,-5,23,-60,-65,23,-63,-30,23,23,-62,23,23,23,-58,-66,-64,23,23,23,23,-61,-60,-59,]),'PLUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,97,98,99,100,101,102,103,104,105,109,110,111,112,113,117,119,120,121,122,124,125,126,127,128,129,],[30,30,-2,-34,-35,-36,-53,-54,-55,-56,-57,-37,-38,-39,-40,-41,44,30,30,-11,30,30,-50,-51,-52,-4,30,30,30,-6,-7,-8,-9,-10,-3,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,44,-11,44,30,30,30,30,30,30,44,44,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,44,44,44,44,44,44,44,44,30,30,30,44,44,44,44,44,44,-5,30,-60,-65,30,-63,44,-30,30,30,-62,30,30,30,-58,44,-66,-64,30,30,30,30,-61,-60,-59,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,97,98,99,100,101,102,103,104,105,109,110,111,112,113,117,119,120,121,122,124,125,126,127,128,129,],[31,31,-2,-34,-35,-36,-53,-54,-55,-56,-57,-37,-38,-39,-40,-41,45,31,31,-11,31,31,-50,-51,-52,-4,31,31,31,-6,-7,-8,-9,-10,-3,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,45,-11,45,31,31,31,31,31,31,45,45,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,45,45,45,45,45,45,45,45,31,31,31,45,45,45,45,45,45,-5,31,-60,-65,31,-63,45,-30,31,31,-62,31,31,31,-58,45,-66,-64,31,31,31,31,-61,-60,-59,]),'NOT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,58,59,60,61,62,63,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,99,100,101,102,104,105,109,110,111,112,113,117,120,121,122,124,125,126,127,128,129,],[32,32,-2,-34,-35,-36,-53,-54,-55,-56,-57,-37,-38,-39,-40,-41,-42,32,32,-11,32,32,-50,-51,-52,-4,32,32,32,-6,-7,-8,-9,-10,-3,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-11,32,32,32,32,32,32,-48,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,32,32,32,-43,-44,-45,-46,-47,-5,32,-60,-65,32,-63,-30,32,32,-62,32,32,32,-58,-66,-64,32,32,32,32,-61,-60,-59,]),'NUMBER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,58,59,60,61,62,63,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,99,100,101,102,104,105,109,110,111,112,113,117,120,121,122,124,125,126,127,128,129,],[33,33,-2,-34,-35,-36,-53,-54,-55,-56,-57,-37,-38,-39,-40,-41,-42,33,33,-11,33,33,-50,-51,-52,-4,33,33,33,-6,-7,-8,-9,-10,-3,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-11,33,33,33,33,33,33,-48,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,33,33,33,-43,-44,-45,-46,-47,-5,33,-60,-65,33,-63,-30,33,33,-62,33,33,33,-58,-66,-64,33,33,33,33,-61,-60,-59,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,58,59,60,61,62,63,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,99,100,101,102,104,105,109,110,111,112,113,117,120,121,122,124,125,126,127,128,129,],[34,34,-2,-34,-35,-36,-53,-54,-55,-56,-57,-37,-38,-39,-40,-41,-42,34,34,-11,34,34,-50,-51,-52,-4,34,34,34,-6,-7,-8,-9,-10,-3,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-11,34,34,34,34,34,34,-48,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,34,34,34,-43,-44,-45,-46,-47,-5,34,-60,-65,34,-63,-30,34,34,-62,34,34,34,-58,-66,-64,34,34,34,34,-61,-60,-59,]),'TRUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,58,59,60,61,62,63,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,99,100,101,102,104,105,109,110,111,112,113,117,120,121,122,124,125,126,127,128,129,],[35,35,-2,-34,-35,-36,-53,-54,-55,-56,-57,-37,-38,-39,-40,-41,-42,35,35,-11,35,35,-50,-51,-52,-4,35,35,35,-6,-7,-8,-9,-10,-3,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-11,35,35,35,35,35,35,-48,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,35,35,35,-43,-44,-45,-46,-47,-5,35,-60,-65,35,-63,-30,35,35,-62,35,35,35,-58,-66,-64,35,35,35,35,-61,-60,-59,]),'FALSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,58,59,60,61,62,63,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,99,100,101,102,104,105,109,110,111,112,113,117,120,121,122,124,125,126,127,128,129,],[36,36,-2,-34,-35,-36,-53,-54,-55,-56,-57,-37,-38,-39,-40,-41,-42,36,36,-11,36,36,-50,-51,-52,-4,36,36,36,-6,-7,-8,-9,-10,-3,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-11,36,36,36,36,36,36,-48,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,36,36,36,-43,-44,-45,-46,-47,-5,36,-60,-65,36,-63,-30,36,36,-62,36,36,36,-58,-66,-64,36,36,36,36,-61,-60,-59,]),'NONE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,58,59,60,61,62,63,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,99,100,101,102,104,105,109,110,111,112,113,117,120,121,122,124,125,126,127,128,129,],[37,37,-2,-34,-35,-36,-53,-54,-55,-56,-57,-37,-38,-39,-40,-41,-42,37,37,-11,37,37,-50,-51,-52,-4,37,37,37,-6,-7,-8,-9,-10,-3,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-11,37,37,37,37,37,37,-48,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,37,37,37,-43,-44,-45,-46,-47,-5,37,-60,-65,37,-63,-30,37,37,-62,37,37,37,-58,-66,-64,37,37,37,37,-61,-60,-59,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,25,26,27,28,29,33,34,35,36,37,38,55,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,90,91,92,93,97,99,100,102,104,109,110,117,120,121,126,127,128,129,],[0,-1,-2,-34,-35,-36,-53,-54,-55,-56,-57,-37,-38,-39,-40,-41,-42,-11,-49,-50,-51,-52,-4,-6,-7,-8,-9,-10,-3,-11,-48,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-43,-44,-45,-46,-47,-5,-60,-65,-63,-30,-72,-62,-58,-66,-64,-67,-61,-60,-59,]),'DEDENT':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,25,26,27,28,29,33,34,35,36,37,38,55,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,90,91,92,93,97,99,100,102,104,109,110,112,117,120,121,126,127,128,129,],[-2,-34,-35,-36,-53,-54,-55,-56,-57,-37,-38,-39,-40,-41,-42,-11,-49,-50,-51,-52,-4,-6,-7,-8,-9,-10,-3,-11,-48,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-43,-44,-45,-46,-47,-5,-60,-65,-63,-30,-72,-62,120,-58,-66,-64,-67,-61,-60,-59,]),'ELIF':([6,12,13,14,15,16,17,21,25,26,27,28,29,33,34,35,36,37,55,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,90,91,92,93,97,99,100,104,120,128,],[-36,-37,-38,-39,-40,-41,-42,-11,-49,-50,-51,-52,-4,-6,-7,-8,-9,-10,-11,-48,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-43,-44,-45,-46,-47,-5,111,-65,-30,-66,111,]),'ELSE':([6,12,13,14,15,16,17,21,25,26,27,28,29,33,34,35,36,37,55,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,90,91,92,93,97,99,100,104,110,120,128,129,],[-36,-37,-38,-39,-40,-41,-42,-11,-49,-50,-51,-52,-4,-6,-7,-8,-9,-10,-11,-48,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-43,-44,-45,-46,-47,-5,-60,-65,-30,118,-66,-60,-59,]),'POWER':([17,21,29,33,34,35,36,37,54,55,56,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,90,91,92,93,95,97,103,104,119,],[39,-11,-4,-6,-7,-8,-9,-10,39,-11,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-5,39,-30,39,]),'TIMES':([17,21,29,33,34,35,36,37,54,55,56,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,90,91,92,93,95,97,103,104,119,],[40,-11,-4,-6,-7,-8,-9,-10,40,-11,40,40,40,-12,-13,-14,-15,-16,-17,-18,-19,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-5,40,-30,40,]),'DIVIDE':([17,21,29,33,34,35,36,37,54,55,56,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,90,91,92,93,95,97,103,104,119,],[41,-11,-4,-6,-7,-8,-9,-10,41,-11,41,41,41,-12,-13,-14,-15,-16,-17,-18,-19,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-5,41,-30,41,]),'FLOOR_DIVIDE':([17,21,29,33,34,35,36,37,54,55,56,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,90,91,92,93,95,97,103,104,119,],[42,-11,-4,-6,-7,-8,-9,-10,42,-11,42,42,42,-12,-13,-14,-15,-16,-17,-18,-19,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-5,42,-30,42,]),'MOD':([17,21,29,33,34,35,36,37,54,55,56,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,90,91,92,93,95,97,103,104,119,],[43,-11,-4,-6,-7,-8,-9,-10,43,-11,43,43,43,-12,-13,-14,-15,-16,-17,-18,-19,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-5,43,-30,43,]),'EQUALS':([17,21,29,33,34,35,36,37,54,55,56,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,90,91,92,93,95,97,103,104,119,],[46,-11,-4,-6,-7,-8,-9,-10,46,-11,46,46,46,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,46,46,46,46,46,46,46,46,-5,46,-30,46,]),'NOT_EQUALS':([17,21,29,33,34,35,36,37,54,55,56,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,90,91,92,93,95,97,103,104,119,],[47,-11,-4,-6,-7,-8,-9,-10,47,-11,47,47,47,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,47,47,47,47,47,47,47,47,-5,47,-30,47,]),'LESS_THAN':([17,21,29,33,34,35,36,37,54,55,56,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,90,91,92,93,95,97,103,104,119,],[48,-11,-4,-6,-7,-8,-9,-10,48,-11,48,48,48,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,48,48,48,48,48,48,48,48,-5,48,-30,48,]),'LESS_THAN_EQUALS':([17,21,29,33,34,35,36,37,54,55,56,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,90,91,92,93,95,97,103,104,119,],[49,-11,-4,-6,-7,-8,-9,-10,49,-11,49,49,49,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,49,49,49,49,49,49,49,49,-5,49,-30,49,]),'GREATER_THAN':([17,21,29,33,34,35,36,37,54,55,56,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,90,91,92,93,95,97,103,104,119,],[50,-11,-4,-6,-7,-8,-9,-10,50,-11,50,50,50,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,50,50,50,50,50,50,50,50,-5,50,-30,50,]),'GREATER_THAN_EQUALS':([17,21,29,33,34,35,36,37,54,55,56,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,90,91,92,93,95,97,103,104,119,],[51,-11,-4,-6,-7,-8,-9,-10,51,-11,51,51,51,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,51,51,51,51,51,51,51,51,-5,51,-30,51,]),'AND':([17,21,29,33,34,35,36,37,54,55,56,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,90,91,92,93,95,97,103,104,119,],[52,-11,-4,-6,-7,-8,-9,-10,52,-11,52,52,52,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,52,52,52,52,52,52,52,-5,52,-30,52,]),'OR':([17,21,29,33,34,35,36,37,54,55,56,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,90,91,92,93,95,97,103,104,119,],[53,-11,-4,-6,-7,-8,-9,-10,53,-11,53,53,53,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,53,53,53,53,53,53,-5,53,-30,53,]),'ASSIGN':([21,],[58,]),'PLUS_ASSIGN':([21,],[59,]),'MINUS_ASSIGN':([21,],[60,]),'TIMES_ASSIGN':([21,],[61,]),'DIVIDE_ASSIGN':([21,],[62,]),'COLON':([29,33,34,35,36,37,54,55,56,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,97,103,104,115,118,119,],[-4,-6,-7,-8,-9,-10,86,-11,87,98,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-5,113,-30,122,124,125,]),'RPAREN':([29,33,34,35,36,37,55,63,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,95,96,97,104,105,106,107,108,114,116,123,],[-4,-6,-7,-8,-9,-10,-11,-33,97,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,104,-32,-70,-5,-30,-33,-71,115,-69,-31,-70,-68,]),'COMMA':([29,33,34,35,36,37,55,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,95,97,104,106,108,],[-4,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,105,-5,-30,-71,116,]),'IN':([57,],[88,]),'INDENT':([86,87,113,124,125,],[101,101,101,101,101,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'module':([0,],[1,]),'statement_list':([0,98,101,122,],[2,109,112,126,]),'statement':([0,2,98,101,109,112,122,126,],[3,38,3,3,38,38,3,38,]),'simple_statement':([0,2,86,87,98,101,109,112,113,122,124,125,126,],[4,4,100,100,4,4,4,4,100,4,100,100,4,]),'compound_statement':([0,2,98,101,109,112,122,126,],[5,5,5,5,5,5,5,5,]),'small_stmt':([0,2,86,87,98,101,109,112,113,122,124,125,126,],[6,6,6,6,6,6,6,6,6,6,6,6,6,]),'if_stmt':([0,2,98,101,109,112,122,126,],[7,7,7,7,7,7,7,7,]),'while_stmt':([0,2,98,101,109,112,122,126,],[8,8,8,8,8,8,8,8,]),'for_stmt':([0,2,98,101,109,112,122,126,],[9,9,9,9,9,9,9,9,]),'funcdef':([0,2,98,101,109,112,122,126,],[10,10,10,10,10,10,10,10,]),'classdef':([0,2,98,101,109,112,122,126,],[11,11,11,11,11,11,11,11,]),'assignment':([0,2,86,87,98,101,109,112,113,122,124,125,126,],[12,12,12,12,12,12,12,12,12,12,12,12,12,]),'return_stmt':([0,2,86,87,98,101,109,112,113,122,124,125,126,],[13,13,13,13,13,13,13,13,13,13,13,13,13,]),'break_stmt':([0,2,86,87,98,101,109,112,113,122,124,125,126,],[14,14,14,14,14,14,14,14,14,14,14,14,14,]),'continue_stmt':([0,2,86,87,98,101,109,112,113,122,124,125,126,],[15,15,15,15,15,15,15,15,15,15,15,15,15,]),'pass_stmt':([0,2,86,87,98,101,109,112,113,122,124,125,126,],[16,16,16,16,16,16,16,16,16,16,16,16,16,]),'expr':([0,2,18,19,23,25,30,31,32,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,58,59,60,61,62,63,86,87,88,98,101,105,109,111,112,113,122,124,125,126,],[17,17,54,56,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,90,91,92,93,95,17,17,103,17,17,95,17,119,17,17,17,17,17,17,]),'atom':([0,2,18,19,23,25,30,31,32,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,58,59,60,61,62,63,86,87,88,98,101,105,109,111,112,113,122,124,125,126,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'arg_list_opt':([63,105,],[94,114,]),'suite':([86,87,113,124,125,],[99,102,121,127,128,]),'param_list_opt':([96,116,],[107,123,]),'param':([96,116,],[108,108,]),'elif_blocks':([99,128,],[110,129,]),'else_block_opt':([110,],[117,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('module -> statement_list','module',1,'p_module','parser.py',104),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',108),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',109),
  ('expr -> atom','expr',1,'p_expr_atom','parser.py',141),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr_group','parser.py',147),
  ('atom -> NUMBER','atom',1,'p_atom_number','parser.py',154),
  ('atom -> STRING','atom',1,'p_atom_string','parser.py',159),
  ('atom -> TRUE','atom',1,'p_atom_true','parser.py',164),
  ('atom -> FALSE','atom',1,'p_atom_false','parser.py',169),
  ('atom -> NONE','atom',1,'p_atom_none','parser.py',174),
  ('atom -> ID','atom',1,'p_atom_identifier','parser.py',180),
  ('expr -> PLUS expr','expr',2,'p_expr_unary_plus','parser.py',187),
  ('expr -> MINUS expr','expr',2,'p_expr_unary_minus','parser.py',193),
  ('expr -> NOT expr','expr',2,'p_expr_unary_not','parser.py',198),
  ('expr -> expr POWER expr','expr',3,'p_expr_power','parser.py',205),
  ('expr -> expr TIMES expr','expr',3,'p_expr_multiplicative','parser.py',211),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr_multiplicative','parser.py',212),
  ('expr -> expr FLOOR_DIVIDE expr','expr',3,'p_expr_multiplicative','parser.py',213),
  ('expr -> expr MOD expr','expr',3,'p_expr_multiplicative','parser.py',214),
  ('expr -> expr PLUS expr','expr',3,'p_expr_additive','parser.py',220),
  ('expr -> expr MINUS expr','expr',3,'p_expr_additive','parser.py',221),
  ('expr -> expr EQUALS expr','expr',3,'p_expr_comparison','parser.py',229),
  ('expr -> expr NOT_EQUALS expr','expr',3,'p_expr_comparison','parser.py',230),
  ('expr -> expr LESS_THAN expr','expr',3,'p_expr_comparison','parser.py',231),
  ('expr -> expr LESS_THAN_EQUALS expr','expr',3,'p_expr_comparison','parser.py',232),
  ('expr -> expr GREATER_THAN expr','expr',3,'p_expr_comparison','parser.py',233),
  ('expr -> expr GREATER_THAN_EQUALS expr','expr',3,'p_expr_comparison','parser.py',234),
  ('expr -> expr AND expr','expr',3,'p_expr_logical','parser.py',242),
  ('expr -> expr OR expr','expr',3,'p_expr_logical','parser.py',243),
  ('expr -> ID LPAREN arg_list_opt RPAREN','expr',4,'p_expr_call','parser.py',251),
  ('arg_list_opt -> expr COMMA arg_list_opt','arg_list_opt',3,'p_arg_list_opt','parser.py',264),
  ('arg_list_opt -> expr','arg_list_opt',1,'p_arg_list_opt','parser.py',265),
  ('arg_list_opt -> <empty>','arg_list_opt',0,'p_arg_list_opt_empty','parser.py',272),
  ('statement -> simple_statement','statement',1,'p_statement','parser.py',279),
  ('statement -> compound_statement','statement',1,'p_statement','parser.py',280),
  ('simple_statement -> small_stmt','simple_statement',1,'p_simple_statement','parser.py',285),
  ('small_stmt -> assignment','small_stmt',1,'p_small_stmt','parser.py',289),
  ('small_stmt -> return_stmt','small_stmt',1,'p_small_stmt','parser.py',290),
  ('small_stmt -> break_stmt','small_stmt',1,'p_small_stmt','parser.py',291),
  ('small_stmt -> continue_stmt','small_stmt',1,'p_small_stmt','parser.py',292),
  ('small_stmt -> pass_stmt','small_stmt',1,'p_small_stmt','parser.py',293),
  ('small_stmt -> expr','small_stmt',1,'p_small_stmt','parser.py',294),
  ('assignment -> ID ASSIGN expr','assignment',3,'p_assignment','parser.py',306),
  ('assignment -> ID PLUS_ASSIGN expr','assignment',3,'p_assignment','parser.py',307),
  ('assignment -> ID MINUS_ASSIGN expr','assignment',3,'p_assignment','parser.py',308),
  ('assignment -> ID TIMES_ASSIGN expr','assignment',3,'p_assignment','parser.py',309),
  ('assignment -> ID DIVIDE_ASSIGN expr','assignment',3,'p_assignment','parser.py',310),
  ('return_stmt -> RETURN expr','return_stmt',2,'p_return_stmt','parser.py',322),
  ('return_stmt -> RETURN','return_stmt',1,'p_return_stmt','parser.py',323),
  ('break_stmt -> BREAK','break_stmt',1,'p_break_stmt','parser.py',331),
  ('continue_stmt -> CONTINUE','continue_stmt',1,'p_continue_stmt','parser.py',336),
  ('pass_stmt -> PASS','pass_stmt',1,'p_pass_stmt','parser.py',341),
  ('compound_statement -> if_stmt','compound_statement',1,'p_compound_statement','parser.py',346),
  ('compound_statement -> while_stmt','compound_statement',1,'p_compound_statement','parser.py',347),
  ('compound_statement -> for_stmt','compound_statement',1,'p_compound_statement','parser.py',348),
  ('compound_statement -> funcdef','compound_statement',1,'p_compound_statement','parser.py',349),
  ('compound_statement -> classdef','compound_statement',1,'p_compound_statement','parser.py',350),
  ('if_stmt -> IF expr COLON suite elif_blocks else_block_opt','if_stmt',6,'p_if_stmt','parser.py',356),
  ('elif_blocks -> ELIF expr COLON suite elif_blocks','elif_blocks',5,'p_elif_blocks','parser.py',360),
  ('elif_blocks -> <empty>','elif_blocks',0,'p_elif_blocks','parser.py',361),
  ('else_block_opt -> ELSE COLON suite','else_block_opt',3,'p_else_block_opt','parser.py',368),
  ('else_block_opt -> <empty>','else_block_opt',0,'p_else_block_opt','parser.py',369),
  ('while_stmt -> WHILE expr COLON suite','while_stmt',4,'p_while_stmt','parser.py',374),
  ('for_stmt -> FOR ID IN expr COLON suite','for_stmt',6,'p_for_stmt','parser.py',379),
  ('suite -> simple_statement','suite',1,'p_suite','parser.py',389),
  ('suite -> INDENT statement_list DEDENT','suite',3,'p_suite','parser.py',390),
  ('funcdef -> DEF ID LPAREN param_list_opt RPAREN COLON statement_list','funcdef',7,'p_funcdef','parser.py',399),
  ('param_list_opt -> param COMMA param_list_opt','param_list_opt',3,'p_param_list_opt','parser.py',410),
  ('param_list_opt -> param','param_list_opt',1,'p_param_list_opt','parser.py',411),
  ('param_list_opt -> <empty>','param_list_opt',0,'p_param_list_opt','parser.py',412),
  ('param -> ID','param',1,'p_param','parser.py',421),
  ('classdef -> CLASS ID COLON statement_list','classdef',4,'p_classdef','parser.py',426),
]
