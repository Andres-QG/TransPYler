
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'moduleleftORleftANDleftEQUALSNOT_EQUALSLESS_THANLESS_THAN_EQUALSGREATER_THANGREATER_THAN_EQUALSleftPLUSMINUSleftTIMESDIVIDEFLOOR_DIVIDEMODrightUPLUSUMINUSNOTrightPOWERAND ASSIGN BREAK CLASS COLON COMMA CONTINUE DEDENT DEF DIVIDE DIVIDE_ASSIGN DOT ELIF ELSE EQUALS FALSE FLOOR_DIVIDE FLOOR_DIVIDE_ASSIGN FOR GREATER_THAN GREATER_THAN_EQUALS ID IF IN INDENT LBRACE LBRACKET LESS_THAN LESS_THAN_EQUALS LPAREN MINUS MINUS_ASSIGN MOD MOD_ASSIGN NEWLINE NONE NOT NOT_EQUALS NUMBER OR PASS PLUS PLUS_ASSIGN POWER POWER_ASSIGN RBRACE RBRACKET RETURN RPAREN STRING TIMES TIMES_ASSIGN TRUE WHILEcompound_statement : if_stmt\n| while_stmt\n| for_stmt\n| funcdef\n| classdefif_stmt : IF expr COLON suite elif_blocks else_block_optfuncdef : DEF ID LPAREN param_list_opt RPAREN COLON statement_listwhile_stmt : WHILE expr COLON suitestatement : simple_statement\n| compound_statementelif_blocks : ELIF expr COLON suite elif_blocks\n|expr : atomfor_stmt : FOR ID IN expr COLON suitesimple_statement : small_stmtclassdef : CLASS ID COLON statement_listsuite : simple_statement\n| INDENT statement_list DEDENTexpr : LPAREN expr RPARENsmall_stmt : assignment\n| return_stmt\n| break_stmt\n| continue_stmt\n| pass_stmt\n| exprelse_block_opt : ELSE COLON suite\n|param_list_opt : param COMMA param_list_opt\n| param\n|atom : NUMBERatom : STRINGparam : IDatom : TRUEassignment : assign_targets ASSIGN expr\n| assign_targets PLUS_ASSIGN expr\n| assign_targets MINUS_ASSIGN expr\n| assign_targets TIMES_ASSIGN expr\n| assign_targets DIVIDE_ASSIGN expr\n| assign_targets FLOOR_DIVIDE_ASSIGN expr\n| assign_targets MOD_ASSIGN expr\n| assign_targets POWER_ASSIGN expratom : FALSEatom : NONEatom : IDassign_targets : assign_targets ASSIGN target\n| targetatom : LPAREN elements_opt RPARENtarget : ID\n| LPAREN elements_opt RPAREN\n| LBRACKET elements_opt RBRACKETatom : LBRACKET elements_opt RBRACKETatom : LBRACE key_value_list_opt RBRACEreturn_stmt : RETURN expr\n| RETURNexpr : PLUS expr %prec UPLUSexpr : MINUS expr %prec UMINUSbreak_stmt : BREAKexpr : NOT exprcontinue_stmt : CONTINUEpass_stmt : PASSexpr : expr POWER expr %prec POWERmodule : statement_listexpr : expr TIMES expr\n| expr DIVIDE expr\n| expr FLOOR_DIVIDE expr\n| expr MOD exprstatement_list : statement\n| statement_list statementexpr : expr PLUS expr\n| expr MINUS exprexpr : expr EQUALS expr\n| expr NOT_EQUALS expr\n| expr LESS_THAN expr\n| expr LESS_THAN_EQUALS expr\n| expr GREATER_THAN expr\n| expr GREATER_THAN_EQUALS exprexpr : expr AND expr\n| expr OR exprexpr : ID LPAREN arg_list_opt RPARENarg_list_opt : expr COMMA arg_list_opt\n| exprarg_list_opt :key_value_list : key_value\n| key_value COMMA key_value_listkey_value_list_opt : key_value_list\n| emptykey_value : expr COLON exprelements : expr\n| elements COMMA exprelements_opt : elements\n| emptyempty :'
    
_lr_action_items = {'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,42,60,79,80,81,82,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,113,114,116,117,120,122,123,124,125,126,127,128,129,130,133,134,135,136,137,138,140,146,151,153,158,159,160,163,164,165,169,170,171,172,],[18,18,-68,-9,-10,-15,-1,-2,-3,-4,-5,-20,-21,-22,-23,-24,-25,-45,-55,-58,-60,-61,-13,-31,-32,-34,-43,-44,-69,-45,-54,-56,-57,-59,-62,-64,-65,-66,-67,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-19,-48,18,-35,-45,-36,-37,-38,-39,-40,-41,-42,-52,-53,-12,-17,18,-48,-52,-8,-80,18,-27,18,-48,-52,-6,-18,-14,18,18,-26,-12,-11,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,42,60,79,80,81,82,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,113,114,116,117,120,122,123,124,125,126,127,128,129,130,133,134,135,136,137,138,140,146,151,153,158,159,160,163,164,165,169,170,171,172,],[19,19,-68,-9,-10,-15,-1,-2,-3,-4,-5,-20,-21,-22,-23,-24,-25,-45,-55,-58,-60,-61,-13,-31,-32,-34,-43,-44,-69,-45,-54,-56,-57,-59,-62,-64,-65,-66,-67,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-19,-48,19,-35,-45,-36,-37,-38,-39,-40,-41,-42,-52,-53,-12,-17,19,-48,-52,-8,-80,19,-27,19,-48,-52,-6,-18,-14,19,19,-26,-12,-11,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,42,60,79,80,81,82,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,113,114,116,117,120,122,123,124,125,126,127,128,129,130,133,134,135,136,137,138,140,146,151,153,158,159,160,163,164,165,169,170,171,172,],[20,20,-68,-9,-10,-15,-1,-2,-3,-4,-5,-20,-21,-22,-23,-24,-25,-45,-55,-58,-60,-61,-13,-31,-32,-34,-43,-44,-69,-45,-54,-56,-57,-59,-62,-64,-65,-66,-67,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-19,-48,20,-35,-45,-36,-37,-38,-39,-40,-41,-42,-52,-53,-12,-17,20,-48,-52,-8,-80,20,-27,20,-48,-52,-6,-18,-14,20,20,-26,-12,-11,]),'DEF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,42,60,79,80,81,82,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,113,114,116,117,120,122,123,124,125,126,127,128,129,130,133,134,135,136,137,138,140,146,151,153,158,159,160,163,164,165,169,170,171,172,],[22,22,-68,-9,-10,-15,-1,-2,-3,-4,-5,-20,-21,-22,-23,-24,-25,-45,-55,-58,-60,-61,-13,-31,-32,-34,-43,-44,-69,-45,-54,-56,-57,-59,-62,-64,-65,-66,-67,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-19,-48,22,-35,-45,-36,-37,-38,-39,-40,-41,-42,-52,-53,-12,-17,22,-48,-52,-8,-80,22,-27,22,-48,-52,-6,-18,-14,22,22,-26,-12,-11,]),'CLASS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,42,60,79,80,81,82,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,113,114,116,117,120,122,123,124,125,126,127,128,129,130,133,134,135,136,137,138,140,146,151,153,158,159,160,163,164,165,169,170,171,172,],[24,24,-68,-9,-10,-15,-1,-2,-3,-4,-5,-20,-21,-22,-23,-24,-25,-45,-55,-58,-60,-61,-13,-31,-32,-34,-43,-44,-69,-45,-54,-56,-57,-59,-62,-64,-65,-66,-67,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-19,-48,24,-35,-45,-36,-37,-38,-39,-40,-41,-42,-52,-53,-12,-17,24,-48,-52,-8,-80,24,-27,24,-48,-52,-6,-18,-14,24,24,-26,-12,-11,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,42,60,79,80,81,82,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,113,114,116,117,120,122,123,124,125,126,127,128,129,130,133,134,135,136,137,138,140,146,151,153,154,158,159,160,163,164,165,167,168,169,170,171,172,],[26,26,-68,-9,-10,-15,-1,-2,-3,-4,-5,-20,-21,-22,-23,-24,-25,-45,-55,-58,-60,-61,-13,-31,-32,-34,-43,-44,-69,-45,-54,-56,-57,-59,-62,-64,-65,-66,-67,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,26,26,-19,-48,26,-35,-45,-36,-37,-38,-39,-40,-41,-42,-52,-53,-12,-17,26,-48,-52,-8,-80,26,-27,26,26,-48,-52,-6,-18,-14,26,26,26,26,-26,-12,-11,]),'BREAK':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,42,60,79,80,81,82,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,113,114,116,117,120,122,123,124,125,126,127,128,129,130,133,134,135,136,137,138,140,146,151,153,154,158,159,160,163,164,165,167,168,169,170,171,172,],[27,27,-68,-9,-10,-15,-1,-2,-3,-4,-5,-20,-21,-22,-23,-24,-25,-45,-55,-58,-60,-61,-13,-31,-32,-34,-43,-44,-69,-45,-54,-56,-57,-59,-62,-64,-65,-66,-67,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,27,27,-19,-48,27,-35,-45,-36,-37,-38,-39,-40,-41,-42,-52,-53,-12,-17,27,-48,-52,-8,-80,27,-27,27,27,-48,-52,-6,-18,-14,27,27,27,27,-26,-12,-11,]),'CONTINUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,42,60,79,80,81,82,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,113,114,116,117,120,122,123,124,125,126,127,128,129,130,133,134,135,136,137,138,140,146,151,153,154,158,159,160,163,164,165,167,168,169,170,171,172,],[28,28,-68,-9,-10,-15,-1,-2,-3,-4,-5,-20,-21,-22,-23,-24,-25,-45,-55,-58,-60,-61,-13,-31,-32,-34,-43,-44,-69,-45,-54,-56,-57,-59,-62,-64,-65,-66,-67,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,28,28,-19,-48,28,-35,-45,-36,-37,-38,-39,-40,-41,-42,-52,-53,-12,-17,28,-48,-52,-8,-80,28,-27,28,28,-48,-52,-6,-18,-14,28,28,28,28,-26,-12,-11,]),'PASS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,42,60,79,80,81,82,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,113,114,116,117,120,122,123,124,125,126,127,128,129,130,133,134,135,136,137,138,140,146,151,153,154,158,159,160,163,164,165,167,168,169,170,171,172,],[29,29,-68,-9,-10,-15,-1,-2,-3,-4,-5,-20,-21,-22,-23,-24,-25,-45,-55,-58,-60,-61,-13,-31,-32,-34,-43,-44,-69,-45,-54,-56,-57,-59,-62,-64,-65,-66,-67,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,29,29,-19,-48,29,-35,-45,-36,-37,-38,-39,-40,-41,-42,-52,-53,-12,-17,29,-48,-52,-8,-80,29,-27,29,29,-48,-52,-6,-18,-14,29,29,29,29,-26,-12,-11,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,64,65,71,72,73,74,75,76,77,78,79,80,81,82,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,146,151,152,153,154,158,159,160,163,164,165,167,168,169,170,171,172,],[23,23,-68,-9,-10,-15,-1,-2,-3,-4,-5,-20,-21,-22,-23,-24,-25,59,59,64,59,59,-58,-60,-61,-13,59,59,59,-31,-32,-34,-43,-44,59,59,-69,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,64,59,59,112,119,59,59,59,59,59,59,59,-54,-56,-57,-59,-62,-64,-65,-66,-67,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,23,23,59,-19,-48,59,23,-35,59,64,59,-36,-37,-38,-39,-40,-41,-42,-52,-53,59,59,-12,-17,23,-48,-52,-8,-80,59,23,-27,59,23,23,-48,-52,-6,-18,-14,23,23,23,23,-26,-12,-11,]),'PLUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,66,71,72,73,74,75,76,77,78,79,80,81,82,84,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,111,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,145,146,150,151,152,153,154,158,159,160,162,163,164,165,167,168,169,170,171,172,],[31,31,-68,-9,-10,-15,-1,-2,-3,-4,-5,-20,-21,-22,-23,-24,48,31,31,-45,31,31,-58,-60,-61,-13,31,31,31,-31,-32,-34,-43,-44,31,31,-69,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,48,31,-45,31,48,31,48,31,31,31,31,31,31,31,31,48,-56,-57,-59,48,48,-62,-64,-65,-66,-67,-70,-71,48,48,48,48,48,48,48,48,31,31,31,48,-19,-48,31,31,48,31,-45,31,48,48,48,48,48,48,48,-52,-53,31,31,-12,-17,31,-48,-52,-8,48,-80,31,48,31,48,-27,31,31,31,-48,-52,-6,48,-18,-14,31,31,31,31,-26,-12,-11,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,66,71,72,73,74,75,76,77,78,79,80,81,82,84,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,111,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,145,146,150,151,152,153,154,158,159,160,162,163,164,165,167,168,169,170,171,172,],[32,32,-68,-9,-10,-15,-1,-2,-3,-4,-5,-20,-21,-22,-23,-24,49,32,32,-45,32,32,-58,-60,-61,-13,32,32,32,-31,-32,-34,-43,-44,32,32,-69,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,49,32,-45,32,49,32,49,32,32,32,32,32,32,32,32,49,-56,-57,-59,49,49,-62,-64,-65,-66,-67,-70,-71,49,49,49,49,49,49,49,49,32,32,32,49,-19,-48,32,32,49,32,-45,32,49,49,49,49,49,49,49,-52,-53,32,32,-12,-17,32,-48,-52,-8,49,-80,32,49,32,49,-27,32,32,32,-48,-52,-6,49,-18,-14,32,32,32,32,-26,-12,-11,]),'NOT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,64,71,72,73,74,75,76,77,78,79,80,81,82,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,146,151,152,153,154,158,159,160,163,164,165,167,168,169,170,171,172,],[33,33,-68,-9,-10,-15,-1,-2,-3,-4,-5,-20,-21,-22,-23,-24,-25,33,33,-45,33,33,-58,-60,-61,-13,33,33,33,-31,-32,-34,-43,-44,33,33,-69,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-45,33,33,33,33,33,33,33,33,33,33,-54,-56,-57,-59,-62,-64,-65,-66,-67,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,33,33,33,-19,-48,33,33,-35,33,-45,33,-36,-37,-38,-39,-40,-41,-42,-52,-53,33,33,-12,-17,33,-48,-52,-8,-80,33,33,-27,33,33,33,-48,-52,-6,-18,-14,33,33,33,33,-26,-12,-11,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,64,71,72,73,74,75,76,77,78,79,80,81,82,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,146,151,152,153,154,157,158,159,160,163,164,165,167,168,169,170,171,172,],[21,21,-68,-9,-10,-15,-1,-2,-3,-4,-5,-20,-21,-22,-23,-24,-25,60,60,63,-45,65,60,70,60,-58,-60,-61,-13,60,60,60,-31,-32,-34,-43,-44,60,60,-69,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-45,60,60,120,60,60,60,60,60,60,60,-54,-56,-57,-59,-62,-64,-65,-66,-67,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,21,21,60,142,-19,-48,60,21,-35,60,-45,60,-36,-37,-38,-39,-40,-41,-42,-52,-53,60,60,-12,-17,21,-48,-52,-8,-80,60,21,-27,60,21,21,142,-48,-52,-6,-18,-14,21,21,21,21,-26,-12,-11,]),'NUMBER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,64,71,72,73,74,75,76,77,78,79,80,81,82,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,146,151,152,153,154,158,159,160,163,164,165,167,168,169,170,171,172,],[35,35,-68,-9,-10,-15,-1,-2,-3,-4,-5,-20,-21,-22,-23,-24,-25,35,35,-45,35,35,-58,-60,-61,-13,35,35,35,-31,-32,-34,-43,-44,35,35,-69,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-45,35,35,35,35,35,35,35,35,35,35,-54,-56,-57,-59,-62,-64,-65,-66,-67,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,35,35,35,-19,-48,35,35,-35,35,-45,35,-36,-37,-38,-39,-40,-41,-42,-52,-53,35,35,-12,-17,35,-48,-52,-8,-80,35,35,-27,35,35,35,-48,-52,-6,-18,-14,35,35,35,35,-26,-12,-11,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,64,71,72,73,74,75,76,77,78,79,80,81,82,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,146,151,152,153,154,158,159,160,163,164,165,167,168,169,170,171,172,],[36,36,-68,-9,-10,-15,-1,-2,-3,-4,-5,-20,-21,-22,-23,-24,-25,36,36,-45,36,36,-58,-60,-61,-13,36,36,36,-31,-32,-34,-43,-44,36,36,-69,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-45,36,36,36,36,36,36,36,36,36,36,-54,-56,-57,-59,-62,-64,-65,-66,-67,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,36,36,36,-19,-48,36,36,-35,36,-45,36,-36,-37,-38,-39,-40,-41,-42,-52,-53,36,36,-12,-17,36,-48,-52,-8,-80,36,36,-27,36,36,36,-48,-52,-6,-18,-14,36,36,36,36,-26,-12,-11,]),'TRUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,64,71,72,73,74,75,76,77,78,79,80,81,82,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,146,151,152,153,154,158,159,160,163,164,165,167,168,169,170,171,172,],[37,37,-68,-9,-10,-15,-1,-2,-3,-4,-5,-20,-21,-22,-23,-24,-25,37,37,-45,37,37,-58,-60,-61,-13,37,37,37,-31,-32,-34,-43,-44,37,37,-69,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-45,37,37,37,37,37,37,37,37,37,37,-54,-56,-57,-59,-62,-64,-65,-66,-67,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,37,37,37,-19,-48,37,37,-35,37,-45,37,-36,-37,-38,-39,-40,-41,-42,-52,-53,37,37,-12,-17,37,-48,-52,-8,-80,37,37,-27,37,37,37,-48,-52,-6,-18,-14,37,37,37,37,-26,-12,-11,]),'FALSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,64,71,72,73,74,75,76,77,78,79,80,81,82,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,146,151,152,153,154,158,159,160,163,164,165,167,168,169,170,171,172,],[38,38,-68,-9,-10,-15,-1,-2,-3,-4,-5,-20,-21,-22,-23,-24,-25,38,38,-45,38,38,-58,-60,-61,-13,38,38,38,-31,-32,-34,-43,-44,38,38,-69,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-45,38,38,38,38,38,38,38,38,38,38,-54,-56,-57,-59,-62,-64,-65,-66,-67,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,38,38,38,-19,-48,38,38,-35,38,-45,38,-36,-37,-38,-39,-40,-41,-42,-52,-53,38,38,-12,-17,38,-48,-52,-8,-80,38,38,-27,38,38,38,-48,-52,-6,-18,-14,38,38,38,38,-26,-12,-11,]),'NONE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,64,71,72,73,74,75,76,77,78,79,80,81,82,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,146,151,152,153,154,158,159,160,163,164,165,167,168,169,170,171,172,],[39,39,-68,-9,-10,-15,-1,-2,-3,-4,-5,-20,-21,-22,-23,-24,-25,39,39,-45,39,39,-58,-60,-61,-13,39,39,39,-31,-32,-34,-43,-44,39,39,-69,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-45,39,39,39,39,39,39,39,39,39,39,-54,-56,-57,-59,-62,-64,-65,-66,-67,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,39,39,39,-19,-48,39,39,-35,39,-45,39,-36,-37,-38,-39,-40,-41,-42,-52,-53,39,39,-12,-17,39,-48,-52,-8,-80,39,39,-27,39,39,39,-48,-52,-6,-18,-14,39,39,39,39,-26,-12,-11,]),'LBRACKET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,64,71,72,73,74,75,76,77,78,79,80,81,82,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,146,151,152,153,154,158,159,160,163,164,165,167,168,169,170,171,172,],[40,40,-68,-9,-10,-15,-1,-2,-3,-4,-5,-20,-21,-22,-23,-24,-25,61,61,-45,61,61,-58,-60,-61,-13,61,61,61,-31,-32,-34,-43,-44,61,61,-69,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-45,61,61,121,61,61,61,61,61,61,61,-54,-56,-57,-59,-62,-64,-65,-66,-67,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,40,40,61,-19,-48,61,40,-35,61,-45,61,-36,-37,-38,-39,-40,-41,-42,-52,-53,61,61,-12,-17,40,-48,-52,-8,-80,61,40,-27,61,40,40,-48,-52,-6,-18,-14,40,40,40,40,-26,-12,-11,]),'LBRACE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,64,71,72,73,74,75,76,77,78,79,80,81,82,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,146,151,152,153,154,158,159,160,163,164,165,167,168,169,170,171,172,],[41,41,-68,-9,-10,-15,-1,-2,-3,-4,-5,-20,-21,-22,-23,-24,-25,41,41,-45,41,41,-58,-60,-61,-13,41,41,41,-31,-32,-34,-43,-44,41,41,-69,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-45,41,41,41,41,41,41,41,41,41,41,-54,-56,-57,-59,-62,-64,-65,-66,-67,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,41,41,41,-19,-48,41,41,-35,41,-45,41,-36,-37,-38,-39,-40,-41,-42,-52,-53,41,41,-12,-17,41,-48,-52,-8,-80,41,41,-27,41,41,41,-48,-52,-6,-18,-14,41,41,41,41,-26,-12,-11,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,42,60,79,80,81,82,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,113,114,117,120,122,123,124,125,126,127,128,129,130,133,134,136,137,138,140,146,151,158,159,160,163,164,169,170,171,172,],[0,-63,-68,-9,-10,-15,-1,-2,-3,-4,-5,-20,-21,-22,-23,-24,-25,-45,-55,-58,-60,-61,-13,-31,-32,-34,-43,-44,-69,-45,-54,-56,-57,-59,-62,-64,-65,-66,-67,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-19,-48,-35,-45,-36,-37,-38,-39,-40,-41,-42,-52,-53,-12,-17,-48,-52,-8,-80,-16,-27,-48,-52,-6,-18,-14,-7,-26,-12,-11,]),'DEDENT':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,42,60,79,80,81,82,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,113,114,117,120,122,123,124,125,126,127,128,129,130,133,134,136,137,138,140,146,151,153,158,159,160,163,164,169,170,171,172,],[-68,-9,-10,-15,-1,-2,-3,-4,-5,-20,-21,-22,-23,-24,-25,-45,-55,-58,-60,-61,-13,-31,-32,-34,-43,-44,-69,-45,-54,-56,-57,-59,-62,-64,-65,-66,-67,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-19,-48,-35,-45,-36,-37,-38,-39,-40,-41,-42,-52,-53,-12,-17,-48,-52,-8,-80,-16,-27,163,-48,-52,-6,-18,-14,-7,-26,-12,-11,]),'ELIF':([6,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,60,79,80,81,82,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,113,114,117,120,122,123,124,125,126,127,128,129,130,133,134,136,137,140,158,159,163,171,],[-15,-20,-21,-22,-23,-24,-25,-45,-55,-58,-60,-61,-13,-31,-32,-34,-43,-44,-45,-54,-56,-57,-59,-62,-64,-65,-66,-67,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-19,-48,-35,-45,-36,-37,-38,-39,-40,-41,-42,-52,-53,152,-17,-48,-52,-80,-48,-52,-18,152,]),'ELSE':([6,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,60,79,80,81,82,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,113,114,117,120,122,123,124,125,126,127,128,129,130,133,134,136,137,140,151,158,159,163,171,172,],[-15,-20,-21,-22,-23,-24,-25,-45,-55,-58,-60,-61,-13,-31,-32,-34,-43,-44,-45,-54,-56,-57,-59,-62,-64,-65,-66,-67,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-19,-48,-35,-45,-36,-37,-38,-39,-40,-41,-42,-52,-53,-12,-17,-48,-52,-80,161,-48,-52,-18,-12,-11,]),'POWER':([17,21,30,35,36,37,38,39,58,60,62,66,79,80,81,82,84,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,111,113,114,117,120,122,123,124,125,126,127,128,129,130,136,137,139,140,145,150,158,159,162,],[43,-45,-13,-31,-32,-34,-43,-44,43,-45,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-19,-48,43,-45,43,43,43,43,43,43,43,-52,-53,-48,-52,43,-80,43,43,-48,-52,43,]),'TIMES':([17,21,30,35,36,37,38,39,58,60,62,66,79,80,81,82,84,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,111,113,114,117,120,122,123,124,125,126,127,128,129,130,136,137,139,140,145,150,158,159,162,],[44,-45,-13,-31,-32,-34,-43,-44,44,-45,44,44,44,-56,-57,-59,44,44,-62,-64,-65,-66,-67,44,44,44,44,44,44,44,44,44,44,44,-19,-48,44,-45,44,44,44,44,44,44,44,-52,-53,-48,-52,44,-80,44,44,-48,-52,44,]),'DIVIDE':([17,21,30,35,36,37,38,39,58,60,62,66,79,80,81,82,84,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,111,113,114,117,120,122,123,124,125,126,127,128,129,130,136,137,139,140,145,150,158,159,162,],[45,-45,-13,-31,-32,-34,-43,-44,45,-45,45,45,45,-56,-57,-59,45,45,-62,-64,-65,-66,-67,45,45,45,45,45,45,45,45,45,45,45,-19,-48,45,-45,45,45,45,45,45,45,45,-52,-53,-48,-52,45,-80,45,45,-48,-52,45,]),'FLOOR_DIVIDE':([17,21,30,35,36,37,38,39,58,60,62,66,79,80,81,82,84,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,111,113,114,117,120,122,123,124,125,126,127,128,129,130,136,137,139,140,145,150,158,159,162,],[46,-45,-13,-31,-32,-34,-43,-44,46,-45,46,46,46,-56,-57,-59,46,46,-62,-64,-65,-66,-67,46,46,46,46,46,46,46,46,46,46,46,-19,-48,46,-45,46,46,46,46,46,46,46,-52,-53,-48,-52,46,-80,46,46,-48,-52,46,]),'MOD':([17,21,30,35,36,37,38,39,58,60,62,66,79,80,81,82,84,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,111,113,114,117,120,122,123,124,125,126,127,128,129,130,136,137,139,140,145,150,158,159,162,],[47,-45,-13,-31,-32,-34,-43,-44,47,-45,47,47,47,-56,-57,-59,47,47,-62,-64,-65,-66,-67,47,47,47,47,47,47,47,47,47,47,47,-19,-48,47,-45,47,47,47,47,47,47,47,-52,-53,-48,-52,47,-80,47,47,-48,-52,47,]),'EQUALS':([17,21,30,35,36,37,38,39,58,60,62,66,79,80,81,82,84,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,111,113,114,117,120,122,123,124,125,126,127,128,129,130,136,137,139,140,145,150,158,159,162,],[50,-45,-13,-31,-32,-34,-43,-44,50,-45,50,50,50,-56,-57,-59,50,50,-62,-64,-65,-66,-67,-70,-71,-72,-73,-74,-75,-76,-77,50,50,50,-19,-48,50,-45,50,50,50,50,50,50,50,-52,-53,-48,-52,50,-80,50,50,-48,-52,50,]),'NOT_EQUALS':([17,21,30,35,36,37,38,39,58,60,62,66,79,80,81,82,84,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,111,113,114,117,120,122,123,124,125,126,127,128,129,130,136,137,139,140,145,150,158,159,162,],[51,-45,-13,-31,-32,-34,-43,-44,51,-45,51,51,51,-56,-57,-59,51,51,-62,-64,-65,-66,-67,-70,-71,-72,-73,-74,-75,-76,-77,51,51,51,-19,-48,51,-45,51,51,51,51,51,51,51,-52,-53,-48,-52,51,-80,51,51,-48,-52,51,]),'LESS_THAN':([17,21,30,35,36,37,38,39,58,60,62,66,79,80,81,82,84,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,111,113,114,117,120,122,123,124,125,126,127,128,129,130,136,137,139,140,145,150,158,159,162,],[52,-45,-13,-31,-32,-34,-43,-44,52,-45,52,52,52,-56,-57,-59,52,52,-62,-64,-65,-66,-67,-70,-71,-72,-73,-74,-75,-76,-77,52,52,52,-19,-48,52,-45,52,52,52,52,52,52,52,-52,-53,-48,-52,52,-80,52,52,-48,-52,52,]),'LESS_THAN_EQUALS':([17,21,30,35,36,37,38,39,58,60,62,66,79,80,81,82,84,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,111,113,114,117,120,122,123,124,125,126,127,128,129,130,136,137,139,140,145,150,158,159,162,],[53,-45,-13,-31,-32,-34,-43,-44,53,-45,53,53,53,-56,-57,-59,53,53,-62,-64,-65,-66,-67,-70,-71,-72,-73,-74,-75,-76,-77,53,53,53,-19,-48,53,-45,53,53,53,53,53,53,53,-52,-53,-48,-52,53,-80,53,53,-48,-52,53,]),'GREATER_THAN':([17,21,30,35,36,37,38,39,58,60,62,66,79,80,81,82,84,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,111,113,114,117,120,122,123,124,125,126,127,128,129,130,136,137,139,140,145,150,158,159,162,],[54,-45,-13,-31,-32,-34,-43,-44,54,-45,54,54,54,-56,-57,-59,54,54,-62,-64,-65,-66,-67,-70,-71,-72,-73,-74,-75,-76,-77,54,54,54,-19,-48,54,-45,54,54,54,54,54,54,54,-52,-53,-48,-52,54,-80,54,54,-48,-52,54,]),'GREATER_THAN_EQUALS':([17,21,30,35,36,37,38,39,58,60,62,66,79,80,81,82,84,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,111,113,114,117,120,122,123,124,125,126,127,128,129,130,136,137,139,140,145,150,158,159,162,],[55,-45,-13,-31,-32,-34,-43,-44,55,-45,55,55,55,-56,-57,-59,55,55,-62,-64,-65,-66,-67,-70,-71,-72,-73,-74,-75,-76,-77,55,55,55,-19,-48,55,-45,55,55,55,55,55,55,55,-52,-53,-48,-52,55,-80,55,55,-48,-52,55,]),'AND':([17,21,30,35,36,37,38,39,58,60,62,66,79,80,81,82,84,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,111,113,114,117,120,122,123,124,125,126,127,128,129,130,136,137,139,140,145,150,158,159,162,],[56,-45,-13,-31,-32,-34,-43,-44,56,-45,56,56,56,-56,-57,-59,56,56,-62,-64,-65,-66,-67,-70,-71,-72,-73,-74,-75,-76,-77,-78,56,56,-19,-48,56,-45,56,56,56,56,56,56,56,-52,-53,-48,-52,56,-80,56,56,-48,-52,56,]),'OR':([17,21,30,35,36,37,38,39,58,60,62,66,79,80,81,82,84,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,111,113,114,117,120,122,123,124,125,126,127,128,129,130,136,137,139,140,145,150,158,159,162,],[57,-45,-13,-31,-32,-34,-43,-44,57,-45,57,57,57,-56,-57,-59,57,57,-62,-64,-65,-66,-67,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,57,-19,-48,57,-45,57,57,57,57,57,57,57,-52,-53,-48,-52,57,-80,57,57,-48,-52,57,]),'ASSIGN':([21,25,34,114,118,120,129,158,159,],[-49,71,-47,-50,-46,-49,-51,-50,-51,]),'PLUS_ASSIGN':([21,25,34,114,118,120,129,158,159,],[-49,72,-47,-50,-46,-49,-51,-50,-51,]),'MINUS_ASSIGN':([21,25,34,114,118,120,129,158,159,],[-49,73,-47,-50,-46,-49,-51,-50,-51,]),'TIMES_ASSIGN':([21,25,34,114,118,120,129,158,159,],[-49,74,-47,-50,-46,-49,-51,-50,-51,]),'DIVIDE_ASSIGN':([21,25,34,114,118,120,129,158,159,],[-49,75,-47,-50,-46,-49,-51,-50,-51,]),'FLOOR_DIVIDE_ASSIGN':([21,25,34,114,118,120,129,158,159,],[-49,76,-47,-50,-46,-49,-51,-50,-51,]),'MOD_ASSIGN':([21,25,34,114,118,120,129,158,159,],[-49,77,-47,-50,-46,-49,-51,-50,-51,]),'POWER_ASSIGN':([21,25,34,114,118,120,129,158,159,],[-49,78,-47,-50,-46,-49,-51,-50,-51,]),'RPAREN':([23,30,35,36,37,38,39,59,60,64,66,67,68,69,80,81,82,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,110,111,112,113,119,130,136,137,140,141,142,143,144,145,147,155,157,166,],[-93,-13,-31,-32,-34,-43,-44,-93,-45,-83,113,114,-91,-92,-56,-57,-59,-62,-64,-65,-66,-67,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,136,140,-82,-30,-19,-93,-53,-48,-52,-80,-83,-33,156,-29,-90,158,-81,-30,-28,]),'COLON':([30,35,36,37,38,39,58,60,62,70,80,81,82,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,113,130,136,137,139,140,156,161,162,],[-13,-31,-32,-34,-43,-44,105,-45,108,116,-56,-57,-59,132,-62,-64,-65,-66,-67,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-19,-53,-48,-52,154,-80,165,167,168,]),'COMMA':([30,35,36,37,38,39,60,66,68,80,81,82,84,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,111,113,130,136,137,140,142,144,145,150,],[-13,-31,-32,-34,-43,-44,-45,-89,115,-56,-57,-59,-89,131,-62,-64,-65,-66,-67,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,141,-19,-53,-48,-52,-80,-33,157,-90,-88,]),'RBRACKET':([30,35,36,37,38,39,40,60,61,68,69,80,81,82,83,84,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,113,121,130,136,137,140,145,148,],[-13,-31,-32,-34,-43,-44,-93,-45,-93,-91,-92,-56,-57,-59,129,-89,-62,-64,-65,-66,-67,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,137,-19,-93,-53,-48,-52,-80,-90,159,]),'RBRACE':([30,35,36,37,38,39,41,60,80,81,82,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,113,130,136,137,140,149,150,],[-13,-31,-32,-34,-43,-44,-93,-45,-56,-57,-59,130,-86,-87,-84,-62,-64,-65,-66,-67,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-19,-53,-48,-52,-80,-85,-88,]),'IN':([63,],[109,]),'INDENT':([105,108,154,167,168,],[135,135,135,135,135,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'module':([0,],[1,]),'statement_list':([0,116,135,165,],[2,146,153,169,]),'statement':([0,2,116,135,146,153,165,169,],[3,42,3,3,42,42,3,42,]),'simple_statement':([0,2,105,108,116,135,146,153,154,165,167,168,169,],[4,4,134,134,4,4,4,4,134,4,134,134,4,]),'compound_statement':([0,2,116,135,146,153,165,169,],[5,5,5,5,5,5,5,5,]),'small_stmt':([0,2,105,108,116,135,146,153,154,165,167,168,169,],[6,6,6,6,6,6,6,6,6,6,6,6,6,]),'if_stmt':([0,2,116,135,146,153,165,169,],[7,7,7,7,7,7,7,7,]),'while_stmt':([0,2,116,135,146,153,165,169,],[8,8,8,8,8,8,8,8,]),'for_stmt':([0,2,116,135,146,153,165,169,],[9,9,9,9,9,9,9,9,]),'funcdef':([0,2,116,135,146,153,165,169,],[10,10,10,10,10,10,10,10,]),'classdef':([0,2,116,135,146,153,165,169,],[11,11,11,11,11,11,11,11,]),'assignment':([0,2,105,108,116,135,146,153,154,165,167,168,169,],[12,12,12,12,12,12,12,12,12,12,12,12,12,]),'return_stmt':([0,2,105,108,116,135,146,153,154,165,167,168,169,],[13,13,13,13,13,13,13,13,13,13,13,13,13,]),'break_stmt':([0,2,105,108,116,135,146,153,154,165,167,168,169,],[14,14,14,14,14,14,14,14,14,14,14,14,14,]),'continue_stmt':([0,2,105,108,116,135,146,153,154,165,167,168,169,],[15,15,15,15,15,15,15,15,15,15,15,15,15,]),'pass_stmt':([0,2,105,108,116,135,146,153,154,165,167,168,169,],[16,16,16,16,16,16,16,16,16,16,16,16,16,]),'expr':([0,2,18,19,23,26,31,32,33,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,61,64,71,72,73,74,75,76,77,78,105,108,109,115,116,119,121,131,132,135,141,146,152,153,154,165,167,168,169,],[17,17,58,62,66,79,80,81,82,84,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,66,84,111,117,122,123,124,125,126,127,128,17,17,139,145,17,66,84,89,150,17,111,17,162,17,17,17,17,17,17,]),'assign_targets':([0,2,105,108,116,135,146,153,154,165,167,168,169,],[25,25,25,25,25,25,25,25,25,25,25,25,25,]),'atom':([0,2,18,19,23,26,31,32,33,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,61,64,71,72,73,74,75,76,77,78,105,108,109,115,116,119,121,131,132,135,141,146,152,153,154,165,167,168,169,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'target':([0,2,71,105,108,116,135,146,153,154,165,167,168,169,],[34,34,118,34,34,34,34,34,34,34,34,34,34,34,]),'elements_opt':([23,40,59,61,119,121,],[67,83,106,107,147,148,]),'elements':([23,40,59,61,119,121,],[68,68,68,68,68,68,]),'empty':([23,40,41,59,61,119,121,],[69,69,87,69,69,69,69,]),'key_value_list_opt':([41,],[85,]),'key_value_list':([41,131,],[86,149,]),'key_value':([41,131,],[88,88,]),'arg_list_opt':([64,141,],[110,155,]),'suite':([105,108,154,167,168,],[133,138,164,170,171,]),'param_list_opt':([112,157,],[143,166,]),'param':([112,157,],[144,144,]),'elif_blocks':([133,171,],[151,172,]),'else_block_opt':([151,],[160,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('compound_statement -> if_stmt','compound_statement',1,'p_compound_statement','parser_blocks.py',10),
  ('compound_statement -> while_stmt','compound_statement',1,'p_compound_statement','parser_blocks.py',11),
  ('compound_statement -> for_stmt','compound_statement',1,'p_compound_statement','parser_blocks.py',12),
  ('compound_statement -> funcdef','compound_statement',1,'p_compound_statement','parser_blocks.py',13),
  ('compound_statement -> classdef','compound_statement',1,'p_compound_statement','parser_blocks.py',14),
  ('if_stmt -> IF expr COLON suite elif_blocks else_block_opt','if_stmt',6,'p_if_stmt','parser_conditionals.py',10),
  ('funcdef -> DEF ID LPAREN param_list_opt RPAREN COLON statement_list','funcdef',7,'p_funcdef','parser_definitions.py',10),
  ('while_stmt -> WHILE expr COLON suite','while_stmt',4,'p_while_stmt','parser_loops.py',10),
  ('statement -> simple_statement','statement',1,'p_statement','parser_statements.py',10),
  ('statement -> compound_statement','statement',1,'p_statement','parser_statements.py',11),
  ('elif_blocks -> ELIF expr COLON suite elif_blocks','elif_blocks',5,'p_elif_blocks','parser_conditionals.py',14),
  ('elif_blocks -> <empty>','elif_blocks',0,'p_elif_blocks','parser_conditionals.py',15),
  ('expr -> atom','expr',1,'p_expr_atom','parser_expressions.py',14),
  ('for_stmt -> FOR ID IN expr COLON suite','for_stmt',6,'p_for_stmt','parser_loops.py',14),
  ('simple_statement -> small_stmt','simple_statement',1,'p_simple_statement','parser_statements.py',15),
  ('classdef -> CLASS ID COLON statement_list','classdef',4,'p_classdef','parser_definitions.py',16),
  ('suite -> simple_statement','suite',1,'p_suite','parser_blocks.py',18),
  ('suite -> INDENT statement_list DEDENT','suite',3,'p_suite','parser_blocks.py',19),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr_group','parser_expressions.py',18),
  ('small_stmt -> assignment','small_stmt',1,'p_small_stmt','parser_statements.py',19),
  ('small_stmt -> return_stmt','small_stmt',1,'p_small_stmt','parser_statements.py',20),
  ('small_stmt -> break_stmt','small_stmt',1,'p_small_stmt','parser_statements.py',21),
  ('small_stmt -> continue_stmt','small_stmt',1,'p_small_stmt','parser_statements.py',22),
  ('small_stmt -> pass_stmt','small_stmt',1,'p_small_stmt','parser_statements.py',23),
  ('small_stmt -> expr','small_stmt',1,'p_small_stmt','parser_statements.py',24),
  ('else_block_opt -> ELSE COLON suite','else_block_opt',3,'p_else_block_opt','parser_conditionals.py',22),
  ('else_block_opt -> <empty>','else_block_opt',0,'p_else_block_opt','parser_conditionals.py',23),
  ('param_list_opt -> param COMMA param_list_opt','param_list_opt',3,'p_param_list_opt','parser_definitions.py',22),
  ('param_list_opt -> param','param_list_opt',1,'p_param_list_opt','parser_definitions.py',23),
  ('param_list_opt -> <empty>','param_list_opt',0,'p_param_list_opt','parser_definitions.py',24),
  ('atom -> NUMBER','atom',1,'p_atom_number','parser_expressions.py',23),
  ('atom -> STRING','atom',1,'p_atom_string','parser_expressions.py',28),
  ('param -> ID','param',1,'p_param','parser_definitions.py',33),
  ('atom -> TRUE','atom',1,'p_atom_true','parser_expressions.py',33),
  ('assignment -> assign_targets ASSIGN expr','assignment',3,'p_assignment','parser_statements.py',34),
  ('assignment -> assign_targets PLUS_ASSIGN expr','assignment',3,'p_assignment','parser_statements.py',35),
  ('assignment -> assign_targets MINUS_ASSIGN expr','assignment',3,'p_assignment','parser_statements.py',36),
  ('assignment -> assign_targets TIMES_ASSIGN expr','assignment',3,'p_assignment','parser_statements.py',37),
  ('assignment -> assign_targets DIVIDE_ASSIGN expr','assignment',3,'p_assignment','parser_statements.py',38),
  ('assignment -> assign_targets FLOOR_DIVIDE_ASSIGN expr','assignment',3,'p_assignment','parser_statements.py',39),
  ('assignment -> assign_targets MOD_ASSIGN expr','assignment',3,'p_assignment','parser_statements.py',40),
  ('assignment -> assign_targets POWER_ASSIGN expr','assignment',3,'p_assignment','parser_statements.py',41),
  ('atom -> FALSE','atom',1,'p_atom_false','parser_expressions.py',38),
  ('atom -> NONE','atom',1,'p_atom_none','parser_expressions.py',43),
  ('atom -> ID','atom',1,'p_atom_identifier','parser_expressions.py',48),
  ('assign_targets -> assign_targets ASSIGN target','assign_targets',3,'p_assign_targets','parser_statements.py',49),
  ('assign_targets -> target','assign_targets',1,'p_assign_targets','parser_statements.py',50),
  ('atom -> LPAREN elements_opt RPAREN','atom',3,'p_atom_paren','parser_expressions.py',54),
  ('target -> ID','target',1,'p_target','parser_statements.py',57),
  ('target -> LPAREN elements_opt RPAREN','target',3,'p_target','parser_statements.py',58),
  ('target -> LBRACKET elements_opt RBRACKET','target',3,'p_target','parser_statements.py',59),
  ('atom -> LBRACKET elements_opt RBRACKET','atom',3,'p_atom_list','parser_expressions.py',63),
  ('atom -> LBRACE key_value_list_opt RBRACE','atom',3,'p_atom_dict','parser_expressions.py',68),
  ('return_stmt -> RETURN expr','return_stmt',2,'p_return_stmt','parser_statements.py',72),
  ('return_stmt -> RETURN','return_stmt',1,'p_return_stmt','parser_statements.py',73),
  ('expr -> PLUS expr','expr',2,'p_expr_unary_plus','parser_expressions.py',74),
  ('expr -> MINUS expr','expr',2,'p_expr_unary_minus','parser_expressions.py',79),
  ('break_stmt -> BREAK','break_stmt',1,'p_break_stmt','parser_statements.py',80),
  ('expr -> NOT expr','expr',2,'p_expr_unary_not','parser_expressions.py',84),
  ('continue_stmt -> CONTINUE','continue_stmt',1,'p_continue_stmt','parser_statements.py',84),
  ('pass_stmt -> PASS','pass_stmt',1,'p_pass_stmt','parser_statements.py',88),
  ('expr -> expr POWER expr','expr',3,'p_expr_power','parser_expressions.py',90),
  ('module -> statement_list','module',1,'p_module','parser.py',93),
  ('expr -> expr TIMES expr','expr',3,'p_expr_multiplicative','parser_expressions.py',95),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr_multiplicative','parser_expressions.py',96),
  ('expr -> expr FLOOR_DIVIDE expr','expr',3,'p_expr_multiplicative','parser_expressions.py',97),
  ('expr -> expr MOD expr','expr',3,'p_expr_multiplicative','parser_expressions.py',98),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',102),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',103),
  ('expr -> expr PLUS expr','expr',3,'p_expr_additive','parser_expressions.py',103),
  ('expr -> expr MINUS expr','expr',3,'p_expr_additive','parser_expressions.py',104),
  ('expr -> expr EQUALS expr','expr',3,'p_expr_comparison','parser_expressions.py',110),
  ('expr -> expr NOT_EQUALS expr','expr',3,'p_expr_comparison','parser_expressions.py',111),
  ('expr -> expr LESS_THAN expr','expr',3,'p_expr_comparison','parser_expressions.py',112),
  ('expr -> expr LESS_THAN_EQUALS expr','expr',3,'p_expr_comparison','parser_expressions.py',113),
  ('expr -> expr GREATER_THAN expr','expr',3,'p_expr_comparison','parser_expressions.py',114),
  ('expr -> expr GREATER_THAN_EQUALS expr','expr',3,'p_expr_comparison','parser_expressions.py',115),
  ('expr -> expr AND expr','expr',3,'p_expr_logical','parser_expressions.py',121),
  ('expr -> expr OR expr','expr',3,'p_expr_logical','parser_expressions.py',122),
  ('expr -> ID LPAREN arg_list_opt RPAREN','expr',4,'p_expr_call','parser_expressions.py',128),
  ('arg_list_opt -> expr COMMA arg_list_opt','arg_list_opt',3,'p_arg_list_opt','parser_expressions.py',139),
  ('arg_list_opt -> expr','arg_list_opt',1,'p_arg_list_opt','parser_expressions.py',140),
  ('arg_list_opt -> <empty>','arg_list_opt',0,'p_arg_list_opt_empty','parser_expressions.py',147),
  ('key_value_list -> key_value','key_value_list',1,'p_key_value_list','parser_expressions.py',151),
  ('key_value_list -> key_value COMMA key_value_list','key_value_list',3,'p_key_value_list','parser_expressions.py',152),
  ('key_value_list_opt -> key_value_list','key_value_list_opt',1,'p_key_value_list_opt','parser_expressions.py',159),
  ('key_value_list_opt -> empty','key_value_list_opt',1,'p_key_value_list_opt','parser_expressions.py',160),
  ('key_value -> expr COLON expr','key_value',3,'p_key_value','parser_expressions.py',164),
  ('elements -> expr','elements',1,'p_elements','parser_expressions.py',168),
  ('elements -> elements COMMA expr','elements',3,'p_elements','parser_expressions.py',169),
  ('elements_opt -> elements','elements_opt',1,'p_elements_opt','parser_expressions.py',176),
  ('elements_opt -> empty','elements_opt',1,'p_elements_opt','parser_expressions.py',177),
  ('empty -> <empty>','empty',0,'p_empty','parser_expressions.py',181),
]
