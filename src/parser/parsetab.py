
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'moduleleftORleftANDleftEQUALSNOT_EQUALSLESS_THANLESS_THAN_EQUALSGREATER_THANGREATER_THAN_EQUALSleftPLUSMINUSleftTIMESDIVIDEFLOOR_DIVIDEMODrightUPLUSUMINUSNOTrightPOWERAND ASSIGN BREAK CLASS COLON COMMA CONTINUE DEDENT DEF DIVIDE DIVIDE_ASSIGN DOT ELIF ELSE EQUALS FALSE FLOOR_DIVIDE FLOOR_DIVIDE_ASSIGN FOR GREATER_THAN GREATER_THAN_EQUALS ID IF IN INDENT LBRACE LBRACKET LESS_THAN LESS_THAN_EQUALS LPAREN MINUS MINUS_ASSIGN MOD MOD_ASSIGN NEWLINE NONE NOT NOT_EQUALS NUMBER OR PASS PLUS PLUS_ASSIGN POWER POWER_ASSIGN RBRACE RBRACKET RETURN RPAREN STRING TIMES TIMES_ASSIGN TRUE WHILEif_stmt : IF expr COLON suite elif_blocks else_block_optcompound_statement : if_stmt\n        | while_stmt\n        | for_stmt\n        | funcdef\n        | classdeffuncdef : DEF ID LPAREN param_list_opt RPAREN COLON suitewhile_stmt : WHILE expr COLON suiteelif_blocks : ELIF expr COLON suite elif_blocks\n        |for_stmt : FOR ID IN expr COLON suitesuite : simple_statement\n        | INDENT statement_list DEDENTclassdef : CLASS ID COLON suiteelse_block_opt : ELSE COLON suite\n        |statement : simple_statement\n        | compound_statementexpr : atomparam_list_opt : param COMMA param_list_opt\n        | param\n        |expr : LPAREN expr RPARENsimple_statement : small_stmtatom : atom DOT IDsmall_stmt : assignment\n        | return_stmt\n        | break_stmt\n        | continue_stmt\n        | pass_stmt\n        | exprparam : IDatom : NUMBERatom : STRINGatom : TRUEassignment : assign_targets ASSIGN expr\n        | assign_targets PLUS_ASSIGN expr\n        | assign_targets MINUS_ASSIGN expr\n        | assign_targets TIMES_ASSIGN expr\n        | assign_targets DIVIDE_ASSIGN expr\n        | assign_targets FLOOR_DIVIDE_ASSIGN expr\n        | assign_targets MOD_ASSIGN expr\n        | assign_targets POWER_ASSIGN expratom : FALSEatom : NONEatom : IDatom : LPAREN elements_opt RPARENassign_targets : assign_targets ASSIGN target\n        | targettarget : ID\n        | LPAREN elements_opt RPAREN\n        | LBRACKET elements_opt RBRACKET\n        | target LBRACKET expr RBRACKET\n        | target DOT IDatom : LBRACKET elements_opt RBRACKETatom : atom LBRACKET expr RBRACKETatom : LBRACE key_value_list_opt RBRACEexpr : PLUS expr %prec UPLUSreturn_stmt : RETURN expr\n        | RETURNexpr : MINUS expr %prec UMINUSexpr : NOT exprbreak_stmt : BREAKexpr : expr POWER expr %prec POWERcontinue_stmt : CONTINUEpass_stmt : PASSexpr : expr TIMES expr\n        | expr DIVIDE expr\n        | expr FLOOR_DIVIDE expr\n        | expr MOD exprmodule : statement_listexpr : expr PLUS expr\n        | expr MINUS exprstatement_list : statement\n        | statement_list statementexpr : expr EQUALS expr\n        | expr NOT_EQUALS expr\n        | expr LESS_THAN expr\n        | expr LESS_THAN_EQUALS expr\n        | expr GREATER_THAN expr\n        | expr GREATER_THAN_EQUALS exprexpr : expr AND expr\n        | expr OR exprexpr : atom LPAREN arg_list_opt RPARENarg_list_opt : expr COMMA arg_list_opt\n        | exprarg_list_opt :key_value_list : key_value\n        | key_value COMMA key_value_listkey_value_list_opt : key_value_list\n        | emptykey_value : expr COLON exprelements_opt : elements\n        | emptyelements : expr\n        | elements COMMA exprempty :'
    
_lr_action_items = {'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,42,60,78,82,83,84,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,116,119,122,124,125,126,127,128,129,130,133,137,138,141,142,143,144,145,146,152,155,157,161,163,167,168,170,173,174,179,180,181,182,],[18,18,-74,-17,-18,-24,-2,-3,-4,-5,-6,-26,-27,-28,-29,-30,-31,-46,-60,-63,-65,-66,-19,-33,-34,-35,-44,-45,-75,-46,-59,-58,-61,-62,-64,-67,-68,-69,-70,-72,-73,-76,-77,-78,-79,-80,-81,-82,-83,-23,-47,-36,-46,-37,-38,-39,-40,-41,-42,-43,-25,-55,-57,-10,-12,18,-47,-55,-8,-14,-84,-56,-16,18,-47,-55,-1,-13,-11,-7,-15,-10,-9,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,42,60,78,82,83,84,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,116,119,122,124,125,126,127,128,129,130,133,137,138,141,142,143,144,145,146,152,155,157,161,163,167,168,170,173,174,179,180,181,182,],[19,19,-74,-17,-18,-24,-2,-3,-4,-5,-6,-26,-27,-28,-29,-30,-31,-46,-60,-63,-65,-66,-19,-33,-34,-35,-44,-45,-75,-46,-59,-58,-61,-62,-64,-67,-68,-69,-70,-72,-73,-76,-77,-78,-79,-80,-81,-82,-83,-23,-47,-36,-46,-37,-38,-39,-40,-41,-42,-43,-25,-55,-57,-10,-12,19,-47,-55,-8,-14,-84,-56,-16,19,-47,-55,-1,-13,-11,-7,-15,-10,-9,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,42,60,78,82,83,84,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,116,119,122,124,125,126,127,128,129,130,133,137,138,141,142,143,144,145,146,152,155,157,161,163,167,168,170,173,174,179,180,181,182,],[20,20,-74,-17,-18,-24,-2,-3,-4,-5,-6,-26,-27,-28,-29,-30,-31,-46,-60,-63,-65,-66,-19,-33,-34,-35,-44,-45,-75,-46,-59,-58,-61,-62,-64,-67,-68,-69,-70,-72,-73,-76,-77,-78,-79,-80,-81,-82,-83,-23,-47,-36,-46,-37,-38,-39,-40,-41,-42,-43,-25,-55,-57,-10,-12,20,-47,-55,-8,-14,-84,-56,-16,20,-47,-55,-1,-13,-11,-7,-15,-10,-9,]),'DEF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,42,60,78,82,83,84,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,116,119,122,124,125,126,127,128,129,130,133,137,138,141,142,143,144,145,146,152,155,157,161,163,167,168,170,173,174,179,180,181,182,],[22,22,-74,-17,-18,-24,-2,-3,-4,-5,-6,-26,-27,-28,-29,-30,-31,-46,-60,-63,-65,-66,-19,-33,-34,-35,-44,-45,-75,-46,-59,-58,-61,-62,-64,-67,-68,-69,-70,-72,-73,-76,-77,-78,-79,-80,-81,-82,-83,-23,-47,-36,-46,-37,-38,-39,-40,-41,-42,-43,-25,-55,-57,-10,-12,22,-47,-55,-8,-14,-84,-56,-16,22,-47,-55,-1,-13,-11,-7,-15,-10,-9,]),'CLASS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,42,60,78,82,83,84,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,116,119,122,124,125,126,127,128,129,130,133,137,138,141,142,143,144,145,146,152,155,157,161,163,167,168,170,173,174,179,180,181,182,],[24,24,-74,-17,-18,-24,-2,-3,-4,-5,-6,-26,-27,-28,-29,-30,-31,-46,-60,-63,-65,-66,-19,-33,-34,-35,-44,-45,-75,-46,-59,-58,-61,-62,-64,-67,-68,-69,-70,-72,-73,-76,-77,-78,-79,-80,-81,-82,-83,-23,-47,-36,-46,-37,-38,-39,-40,-41,-42,-43,-25,-55,-57,-10,-12,24,-47,-55,-8,-14,-84,-56,-16,24,-47,-55,-1,-13,-11,-7,-15,-10,-9,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,42,60,78,82,83,84,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,115,116,118,119,122,124,125,126,127,128,129,130,133,137,138,141,142,143,144,145,146,152,155,157,161,163,164,167,168,170,173,174,175,177,178,179,180,181,182,],[26,26,-74,-17,-18,-24,-2,-3,-4,-5,-6,-26,-27,-28,-29,-30,-31,-46,-60,-63,-65,-66,-19,-33,-34,-35,-44,-45,-75,-46,-59,-58,-61,-62,-64,-67,-68,-69,-70,-72,-73,-76,-77,-78,-79,-80,-81,-82,-83,26,26,-23,-47,26,-36,-46,-37,-38,-39,-40,-41,-42,-43,-25,-55,-57,-10,-12,26,-47,-55,-8,-14,-84,-56,-16,26,26,-47,-55,-1,-13,-11,26,26,26,-7,-15,-10,-9,]),'BREAK':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,42,60,78,82,83,84,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,115,116,118,119,122,124,125,126,127,128,129,130,133,137,138,141,142,143,144,145,146,152,155,157,161,163,164,167,168,170,173,174,175,177,178,179,180,181,182,],[27,27,-74,-17,-18,-24,-2,-3,-4,-5,-6,-26,-27,-28,-29,-30,-31,-46,-60,-63,-65,-66,-19,-33,-34,-35,-44,-45,-75,-46,-59,-58,-61,-62,-64,-67,-68,-69,-70,-72,-73,-76,-77,-78,-79,-80,-81,-82,-83,27,27,-23,-47,27,-36,-46,-37,-38,-39,-40,-41,-42,-43,-25,-55,-57,-10,-12,27,-47,-55,-8,-14,-84,-56,-16,27,27,-47,-55,-1,-13,-11,27,27,27,-7,-15,-10,-9,]),'CONTINUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,42,60,78,82,83,84,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,115,116,118,119,122,124,125,126,127,128,129,130,133,137,138,141,142,143,144,145,146,152,155,157,161,163,164,167,168,170,173,174,175,177,178,179,180,181,182,],[28,28,-74,-17,-18,-24,-2,-3,-4,-5,-6,-26,-27,-28,-29,-30,-31,-46,-60,-63,-65,-66,-19,-33,-34,-35,-44,-45,-75,-46,-59,-58,-61,-62,-64,-67,-68,-69,-70,-72,-73,-76,-77,-78,-79,-80,-81,-82,-83,28,28,-23,-47,28,-36,-46,-37,-38,-39,-40,-41,-42,-43,-25,-55,-57,-10,-12,28,-47,-55,-8,-14,-84,-56,-16,28,28,-47,-55,-1,-13,-11,28,28,28,-7,-15,-10,-9,]),'PASS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,42,60,78,82,83,84,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,115,116,118,119,122,124,125,126,127,128,129,130,133,137,138,141,142,143,144,145,146,152,155,157,161,163,164,167,168,170,173,174,175,177,178,179,180,181,182,],[29,29,-74,-17,-18,-24,-2,-3,-4,-5,-6,-26,-27,-28,-29,-30,-31,-46,-60,-63,-65,-66,-19,-33,-34,-35,-44,-45,-75,-46,-59,-58,-61,-62,-64,-67,-68,-69,-70,-72,-73,-76,-77,-78,-79,-80,-81,-82,-83,29,29,-23,-47,29,-36,-46,-37,-38,-39,-40,-41,-42,-43,-25,-55,-57,-10,-12,29,-47,-55,-8,-14,-84,-56,-16,29,29,-47,-55,-1,-13,-11,29,29,29,-7,-15,-10,-9,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,64,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,113,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,133,137,138,139,140,141,142,143,144,145,146,152,155,156,157,161,162,163,164,167,168,170,173,174,175,177,178,179,180,181,182,],[23,23,-74,-17,-18,-24,-2,-3,-4,-5,-6,-26,-27,-28,-29,-30,-31,59,59,-46,59,59,-63,-65,-66,79,59,59,59,-33,-34,-35,-44,-45,59,59,-75,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-46,59,114,121,59,59,59,59,59,59,59,-59,59,59,-58,-61,-62,59,-64,-67,-68,-69,-70,-72,-73,-76,-77,-78,-79,-80,-81,-82,-83,23,23,59,-23,-47,59,23,-36,59,-46,59,-37,-38,-39,-40,-41,-42,-43,-25,-55,-57,59,59,-10,-12,23,-47,-55,-8,-14,-84,59,-56,-16,59,23,23,-47,-55,-1,-13,-11,23,23,23,-7,-15,-10,-9,]),'PLUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,88,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,113,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,132,133,134,135,137,138,139,140,141,142,143,144,145,146,147,151,152,155,156,157,160,161,162,163,164,167,168,170,172,173,174,175,177,178,179,180,181,182,],[31,31,-74,-17,-18,-24,-2,-3,-4,-5,-6,-26,-27,-28,-29,-30,48,31,31,-46,31,31,-63,-65,-66,-19,31,31,31,-33,-34,-35,-44,-45,31,31,-75,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,48,31,-46,31,48,48,31,31,31,31,31,31,31,31,48,31,31,-58,-61,-62,31,48,48,-64,-67,-68,-69,-70,-72,-73,48,48,48,48,48,48,48,48,31,31,31,-23,-47,31,31,48,31,-46,31,48,48,48,48,48,48,48,48,-25,48,48,-55,-57,31,31,-10,-12,31,-47,-55,-8,48,48,-14,-84,31,-56,48,-16,31,31,31,-47,-55,-1,48,-13,-11,31,31,31,-7,-15,-10,-9,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,88,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,113,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,132,133,134,135,137,138,139,140,141,142,143,144,145,146,147,151,152,155,156,157,160,161,162,163,164,167,168,170,172,173,174,175,177,178,179,180,181,182,],[32,32,-74,-17,-18,-24,-2,-3,-4,-5,-6,-26,-27,-28,-29,-30,49,32,32,-46,32,32,-63,-65,-66,-19,32,32,32,-33,-34,-35,-44,-45,32,32,-75,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,49,32,-46,32,49,49,32,32,32,32,32,32,32,32,49,32,32,-58,-61,-62,32,49,49,-64,-67,-68,-69,-70,-72,-73,49,49,49,49,49,49,49,49,32,32,32,-23,-47,32,32,49,32,-46,32,49,49,49,49,49,49,49,49,-25,49,49,-55,-57,32,32,-10,-12,32,-47,-55,-8,49,49,-14,-84,32,-56,49,-16,32,32,32,-47,-55,-1,49,-13,-11,32,32,32,-7,-15,-10,-9,]),'NOT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,113,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,133,137,138,139,140,141,142,143,144,145,146,152,155,156,157,161,162,163,164,167,168,170,173,174,175,177,178,179,180,181,182,],[33,33,-74,-17,-18,-24,-2,-3,-4,-5,-6,-26,-27,-28,-29,-30,-31,33,33,-46,33,33,-63,-65,-66,-19,33,33,33,-33,-34,-35,-44,-45,33,33,-75,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-46,33,33,33,33,33,33,33,33,33,-59,33,33,-58,-61,-62,33,-64,-67,-68,-69,-70,-72,-73,-76,-77,-78,-79,-80,-81,-82,-83,33,33,33,-23,-47,33,33,-36,33,-46,33,-37,-38,-39,-40,-41,-42,-43,-25,-55,-57,33,33,-10,-12,33,-47,-55,-8,-14,-84,33,-56,-16,33,33,33,-47,-55,-1,-13,-11,33,33,33,-7,-15,-10,-9,]),'NUMBER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,113,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,133,137,138,139,140,141,142,143,144,145,146,152,155,156,157,161,162,163,164,167,168,170,173,174,175,177,178,179,180,181,182,],[35,35,-74,-17,-18,-24,-2,-3,-4,-5,-6,-26,-27,-28,-29,-30,-31,35,35,-46,35,35,-63,-65,-66,-19,35,35,35,-33,-34,-35,-44,-45,35,35,-75,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-46,35,35,35,35,35,35,35,35,35,-59,35,35,-58,-61,-62,35,-64,-67,-68,-69,-70,-72,-73,-76,-77,-78,-79,-80,-81,-82,-83,35,35,35,-23,-47,35,35,-36,35,-46,35,-37,-38,-39,-40,-41,-42,-43,-25,-55,-57,35,35,-10,-12,35,-47,-55,-8,-14,-84,35,-56,-16,35,35,35,-47,-55,-1,-13,-11,35,35,35,-7,-15,-10,-9,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,113,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,133,137,138,139,140,141,142,143,144,145,146,152,155,156,157,161,162,163,164,167,168,170,173,174,175,177,178,179,180,181,182,],[36,36,-74,-17,-18,-24,-2,-3,-4,-5,-6,-26,-27,-28,-29,-30,-31,36,36,-46,36,36,-63,-65,-66,-19,36,36,36,-33,-34,-35,-44,-45,36,36,-75,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-46,36,36,36,36,36,36,36,36,36,-59,36,36,-58,-61,-62,36,-64,-67,-68,-69,-70,-72,-73,-76,-77,-78,-79,-80,-81,-82,-83,36,36,36,-23,-47,36,36,-36,36,-46,36,-37,-38,-39,-40,-41,-42,-43,-25,-55,-57,36,36,-10,-12,36,-47,-55,-8,-14,-84,36,-56,-16,36,36,36,-47,-55,-1,-13,-11,36,36,36,-7,-15,-10,-9,]),'TRUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,113,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,133,137,138,139,140,141,142,143,144,145,146,152,155,156,157,161,162,163,164,167,168,170,173,174,175,177,178,179,180,181,182,],[37,37,-74,-17,-18,-24,-2,-3,-4,-5,-6,-26,-27,-28,-29,-30,-31,37,37,-46,37,37,-63,-65,-66,-19,37,37,37,-33,-34,-35,-44,-45,37,37,-75,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-46,37,37,37,37,37,37,37,37,37,-59,37,37,-58,-61,-62,37,-64,-67,-68,-69,-70,-72,-73,-76,-77,-78,-79,-80,-81,-82,-83,37,37,37,-23,-47,37,37,-36,37,-46,37,-37,-38,-39,-40,-41,-42,-43,-25,-55,-57,37,37,-10,-12,37,-47,-55,-8,-14,-84,37,-56,-16,37,37,37,-47,-55,-1,-13,-11,37,37,37,-7,-15,-10,-9,]),'FALSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,113,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,133,137,138,139,140,141,142,143,144,145,146,152,155,156,157,161,162,163,164,167,168,170,173,174,175,177,178,179,180,181,182,],[38,38,-74,-17,-18,-24,-2,-3,-4,-5,-6,-26,-27,-28,-29,-30,-31,38,38,-46,38,38,-63,-65,-66,-19,38,38,38,-33,-34,-35,-44,-45,38,38,-75,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-46,38,38,38,38,38,38,38,38,38,-59,38,38,-58,-61,-62,38,-64,-67,-68,-69,-70,-72,-73,-76,-77,-78,-79,-80,-81,-82,-83,38,38,38,-23,-47,38,38,-36,38,-46,38,-37,-38,-39,-40,-41,-42,-43,-25,-55,-57,38,38,-10,-12,38,-47,-55,-8,-14,-84,38,-56,-16,38,38,38,-47,-55,-1,-13,-11,38,38,38,-7,-15,-10,-9,]),'NONE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,113,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,133,137,138,139,140,141,142,143,144,145,146,152,155,156,157,161,162,163,164,167,168,170,173,174,175,177,178,179,180,181,182,],[39,39,-74,-17,-18,-24,-2,-3,-4,-5,-6,-26,-27,-28,-29,-30,-31,39,39,-46,39,39,-63,-65,-66,-19,39,39,39,-33,-34,-35,-44,-45,39,39,-75,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-46,39,39,39,39,39,39,39,39,39,-59,39,39,-58,-61,-62,39,-64,-67,-68,-69,-70,-72,-73,-76,-77,-78,-79,-80,-81,-82,-83,39,39,39,-23,-47,39,39,-36,39,-46,39,-37,-38,-39,-40,-41,-42,-43,-25,-55,-57,39,39,-10,-12,39,-47,-55,-8,-14,-84,39,-56,-16,39,39,39,-47,-55,-1,-13,-11,39,39,39,-7,-15,-10,-9,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,133,137,138,139,140,141,142,143,144,145,146,152,155,156,157,161,162,163,164,166,167,168,170,173,174,175,177,178,179,180,181,182,],[21,21,-74,-17,-18,-24,-2,-3,-4,-5,-6,-26,-27,-28,-29,-30,-31,60,60,63,-46,64,60,69,60,-63,-65,-66,-19,60,60,60,-33,-34,-35,-44,-45,60,60,-75,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-46,60,122,60,60,60,60,60,60,60,-59,60,133,60,-58,-61,-62,60,136,-64,-67,-68,-69,-70,-72,-73,-76,-77,-78,-79,-80,-81,-82,-83,21,21,60,148,-23,-47,60,21,-36,60,-46,60,-37,-38,-39,-40,-41,-42,-43,-25,-55,-57,60,60,-10,-12,21,-47,-55,-8,-14,-84,60,-56,-16,60,21,21,148,-47,-55,-1,-13,-11,21,21,21,-7,-15,-10,-9,]),'LBRACKET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,133,136,137,138,139,140,141,142,143,144,145,146,152,155,156,157,158,161,162,163,164,167,168,170,173,174,175,177,178,179,180,181,182,],[40,40,-74,-17,-18,-24,-2,-3,-4,-5,-6,-26,-27,-28,-29,-30,-31,61,61,-46,61,61,-63,-65,-66,81,61,61,61,85,-33,-34,-35,-44,-45,61,61,-75,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-46,61,123,61,61,61,61,61,61,61,-59,61,61,-58,-61,-62,61,-64,-67,-68,-69,-70,-72,-73,-76,-77,-78,-79,-80,-81,-82,-83,40,40,61,-23,-47,61,40,-36,85,61,-46,61,-37,-38,-39,-40,-41,-42,-43,-25,-54,-55,-57,61,61,-10,-12,40,-47,-55,-8,-14,-84,61,-56,-53,-16,61,40,40,-47,-55,-1,-13,-11,40,40,40,-7,-15,-10,-9,]),'LBRACE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,113,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,133,137,138,139,140,141,142,143,144,145,146,152,155,156,157,161,162,163,164,167,168,170,173,174,175,177,178,179,180,181,182,],[41,41,-74,-17,-18,-24,-2,-3,-4,-5,-6,-26,-27,-28,-29,-30,-31,41,41,-46,41,41,-63,-65,-66,-19,41,41,41,-33,-34,-35,-44,-45,41,41,-75,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-46,41,41,41,41,41,41,41,41,41,-59,41,41,-58,-61,-62,41,-64,-67,-68,-69,-70,-72,-73,-76,-77,-78,-79,-80,-81,-82,-83,41,41,41,-23,-47,41,41,-36,41,-46,41,-37,-38,-39,-40,-41,-42,-43,-25,-55,-57,41,41,-10,-12,41,-47,-55,-8,-14,-84,41,-56,-16,41,41,41,-47,-55,-1,-13,-11,41,41,41,-7,-15,-10,-9,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,42,60,78,82,83,84,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,116,119,122,124,125,126,127,128,129,130,133,137,138,141,142,144,145,146,152,155,157,161,167,168,170,173,174,179,180,181,182,],[0,-71,-74,-17,-18,-24,-2,-3,-4,-5,-6,-26,-27,-28,-29,-30,-31,-46,-60,-63,-65,-66,-19,-33,-34,-35,-44,-45,-75,-46,-59,-58,-61,-62,-64,-67,-68,-69,-70,-72,-73,-76,-77,-78,-79,-80,-81,-82,-83,-23,-47,-36,-46,-37,-38,-39,-40,-41,-42,-43,-25,-55,-57,-10,-12,-47,-55,-8,-14,-84,-56,-16,-47,-55,-1,-13,-11,-7,-15,-10,-9,]),'DEDENT':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,42,60,78,82,83,84,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,116,119,122,124,125,126,127,128,129,130,133,137,138,141,142,144,145,146,152,155,157,161,163,167,168,170,173,174,179,180,181,182,],[-74,-17,-18,-24,-2,-3,-4,-5,-6,-26,-27,-28,-29,-30,-31,-46,-60,-63,-65,-66,-19,-33,-34,-35,-44,-45,-75,-46,-59,-58,-61,-62,-64,-67,-68,-69,-70,-72,-73,-76,-77,-78,-79,-80,-81,-82,-83,-23,-47,-36,-46,-37,-38,-39,-40,-41,-42,-43,-25,-55,-57,-10,-12,-47,-55,-8,-14,-84,-56,-16,173,-47,-55,-1,-13,-11,-7,-15,-10,-9,]),'ELIF':([6,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,60,78,82,83,84,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,116,119,122,124,125,126,127,128,129,130,133,137,138,141,142,144,145,155,157,167,168,173,181,],[-24,-26,-27,-28,-29,-30,-31,-46,-60,-63,-65,-66,-19,-33,-34,-35,-44,-45,-46,-59,-58,-61,-62,-64,-67,-68,-69,-70,-72,-73,-76,-77,-78,-79,-80,-81,-82,-83,-23,-47,-36,-46,-37,-38,-39,-40,-41,-42,-43,-25,-55,-57,162,-12,-47,-55,-84,-56,-47,-55,-13,162,]),'ELSE':([6,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,60,78,82,83,84,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,116,119,122,124,125,126,127,128,129,130,133,137,138,141,142,144,145,155,157,161,167,168,173,181,182,],[-24,-26,-27,-28,-29,-30,-31,-46,-60,-63,-65,-66,-19,-33,-34,-35,-44,-45,-46,-59,-58,-61,-62,-64,-67,-68,-69,-70,-72,-73,-76,-77,-78,-79,-80,-81,-82,-83,-23,-47,-36,-46,-37,-38,-39,-40,-41,-42,-43,-25,-55,-57,-10,-12,-47,-55,-84,-56,171,-47,-55,-13,-10,-9,]),'POWER':([17,21,30,35,36,37,38,39,58,60,62,65,78,82,83,84,88,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,116,119,122,124,125,126,127,128,129,130,132,133,134,135,137,138,144,145,147,151,155,157,160,167,168,172,],[43,-46,-19,-33,-34,-35,-44,-45,43,-46,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-23,-47,43,-46,43,43,43,43,43,43,43,43,-25,43,43,-55,-57,-47,-55,43,43,-84,-56,43,-47,-55,43,]),'TIMES':([17,21,30,35,36,37,38,39,58,60,62,65,78,82,83,84,88,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,116,119,122,124,125,126,127,128,129,130,132,133,134,135,137,138,144,145,147,151,155,157,160,167,168,172,],[44,-46,-19,-33,-34,-35,-44,-45,44,-46,44,44,44,-58,-61,-62,44,44,-64,-67,-68,-69,-70,44,44,44,44,44,44,44,44,44,44,-23,-47,44,-46,44,44,44,44,44,44,44,44,-25,44,44,-55,-57,-47,-55,44,44,-84,-56,44,-47,-55,44,]),'DIVIDE':([17,21,30,35,36,37,38,39,58,60,62,65,78,82,83,84,88,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,116,119,122,124,125,126,127,128,129,130,132,133,134,135,137,138,144,145,147,151,155,157,160,167,168,172,],[45,-46,-19,-33,-34,-35,-44,-45,45,-46,45,45,45,-58,-61,-62,45,45,-64,-67,-68,-69,-70,45,45,45,45,45,45,45,45,45,45,-23,-47,45,-46,45,45,45,45,45,45,45,45,-25,45,45,-55,-57,-47,-55,45,45,-84,-56,45,-47,-55,45,]),'FLOOR_DIVIDE':([17,21,30,35,36,37,38,39,58,60,62,65,78,82,83,84,88,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,116,119,122,124,125,126,127,128,129,130,132,133,134,135,137,138,144,145,147,151,155,157,160,167,168,172,],[46,-46,-19,-33,-34,-35,-44,-45,46,-46,46,46,46,-58,-61,-62,46,46,-64,-67,-68,-69,-70,46,46,46,46,46,46,46,46,46,46,-23,-47,46,-46,46,46,46,46,46,46,46,46,-25,46,46,-55,-57,-47,-55,46,46,-84,-56,46,-47,-55,46,]),'MOD':([17,21,30,35,36,37,38,39,58,60,62,65,78,82,83,84,88,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,116,119,122,124,125,126,127,128,129,130,132,133,134,135,137,138,144,145,147,151,155,157,160,167,168,172,],[47,-46,-19,-33,-34,-35,-44,-45,47,-46,47,47,47,-58,-61,-62,47,47,-64,-67,-68,-69,-70,47,47,47,47,47,47,47,47,47,47,-23,-47,47,-46,47,47,47,47,47,47,47,47,-25,47,47,-55,-57,-47,-55,47,47,-84,-56,47,-47,-55,47,]),'EQUALS':([17,21,30,35,36,37,38,39,58,60,62,65,78,82,83,84,88,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,116,119,122,124,125,126,127,128,129,130,132,133,134,135,137,138,144,145,147,151,155,157,160,167,168,172,],[50,-46,-19,-33,-34,-35,-44,-45,50,-46,50,50,50,-58,-61,-62,50,50,-64,-67,-68,-69,-70,-72,-73,-76,-77,-78,-79,-80,-81,50,50,-23,-47,50,-46,50,50,50,50,50,50,50,50,-25,50,50,-55,-57,-47,-55,50,50,-84,-56,50,-47,-55,50,]),'NOT_EQUALS':([17,21,30,35,36,37,38,39,58,60,62,65,78,82,83,84,88,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,116,119,122,124,125,126,127,128,129,130,132,133,134,135,137,138,144,145,147,151,155,157,160,167,168,172,],[51,-46,-19,-33,-34,-35,-44,-45,51,-46,51,51,51,-58,-61,-62,51,51,-64,-67,-68,-69,-70,-72,-73,-76,-77,-78,-79,-80,-81,51,51,-23,-47,51,-46,51,51,51,51,51,51,51,51,-25,51,51,-55,-57,-47,-55,51,51,-84,-56,51,-47,-55,51,]),'LESS_THAN':([17,21,30,35,36,37,38,39,58,60,62,65,78,82,83,84,88,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,116,119,122,124,125,126,127,128,129,130,132,133,134,135,137,138,144,145,147,151,155,157,160,167,168,172,],[52,-46,-19,-33,-34,-35,-44,-45,52,-46,52,52,52,-58,-61,-62,52,52,-64,-67,-68,-69,-70,-72,-73,-76,-77,-78,-79,-80,-81,52,52,-23,-47,52,-46,52,52,52,52,52,52,52,52,-25,52,52,-55,-57,-47,-55,52,52,-84,-56,52,-47,-55,52,]),'LESS_THAN_EQUALS':([17,21,30,35,36,37,38,39,58,60,62,65,78,82,83,84,88,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,116,119,122,124,125,126,127,128,129,130,132,133,134,135,137,138,144,145,147,151,155,157,160,167,168,172,],[53,-46,-19,-33,-34,-35,-44,-45,53,-46,53,53,53,-58,-61,-62,53,53,-64,-67,-68,-69,-70,-72,-73,-76,-77,-78,-79,-80,-81,53,53,-23,-47,53,-46,53,53,53,53,53,53,53,53,-25,53,53,-55,-57,-47,-55,53,53,-84,-56,53,-47,-55,53,]),'GREATER_THAN':([17,21,30,35,36,37,38,39,58,60,62,65,78,82,83,84,88,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,116,119,122,124,125,126,127,128,129,130,132,133,134,135,137,138,144,145,147,151,155,157,160,167,168,172,],[54,-46,-19,-33,-34,-35,-44,-45,54,-46,54,54,54,-58,-61,-62,54,54,-64,-67,-68,-69,-70,-72,-73,-76,-77,-78,-79,-80,-81,54,54,-23,-47,54,-46,54,54,54,54,54,54,54,54,-25,54,54,-55,-57,-47,-55,54,54,-84,-56,54,-47,-55,54,]),'GREATER_THAN_EQUALS':([17,21,30,35,36,37,38,39,58,60,62,65,78,82,83,84,88,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,116,119,122,124,125,126,127,128,129,130,132,133,134,135,137,138,144,145,147,151,155,157,160,167,168,172,],[55,-46,-19,-33,-34,-35,-44,-45,55,-46,55,55,55,-58,-61,-62,55,55,-64,-67,-68,-69,-70,-72,-73,-76,-77,-78,-79,-80,-81,55,55,-23,-47,55,-46,55,55,55,55,55,55,55,55,-25,55,55,-55,-57,-47,-55,55,55,-84,-56,55,-47,-55,55,]),'AND':([17,21,30,35,36,37,38,39,58,60,62,65,78,82,83,84,88,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,116,119,122,124,125,126,127,128,129,130,132,133,134,135,137,138,144,145,147,151,155,157,160,167,168,172,],[56,-46,-19,-33,-34,-35,-44,-45,56,-46,56,56,56,-58,-61,-62,56,56,-64,-67,-68,-69,-70,-72,-73,-76,-77,-78,-79,-80,-81,-82,56,-23,-47,56,-46,56,56,56,56,56,56,56,56,-25,56,56,-55,-57,-47,-55,56,56,-84,-56,56,-47,-55,56,]),'OR':([17,21,30,35,36,37,38,39,58,60,62,65,78,82,83,84,88,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,116,119,122,124,125,126,127,128,129,130,132,133,134,135,137,138,144,145,147,151,155,157,160,167,168,172,],[57,-46,-19,-33,-34,-35,-44,-45,57,-46,57,57,57,-58,-61,-62,57,57,-64,-67,-68,-69,-70,-72,-73,-76,-77,-78,-79,-80,-81,-82,-83,-23,-47,57,-46,57,57,57,57,57,57,57,57,-25,57,57,-55,-57,-47,-55,57,57,-84,-56,57,-47,-55,57,]),'DOT':([21,30,34,35,36,37,38,39,60,116,120,122,133,136,137,138,144,145,157,158,167,168,],[-46,80,86,-33,-34,-35,-44,-45,-46,-47,86,-46,-25,-54,-55,-57,-47,-55,-56,-53,-47,-55,]),'ASSIGN':([21,25,34,116,120,122,136,137,158,167,168,],[-50,70,-49,-51,-48,-50,-54,-52,-53,-51,-52,]),'PLUS_ASSIGN':([21,25,34,116,120,122,136,137,158,167,168,],[-50,71,-49,-51,-48,-50,-54,-52,-53,-51,-52,]),'MINUS_ASSIGN':([21,25,34,116,120,122,136,137,158,167,168,],[-50,72,-49,-51,-48,-50,-54,-52,-53,-51,-52,]),'TIMES_ASSIGN':([21,25,34,116,120,122,136,137,158,167,168,],[-50,73,-49,-51,-48,-50,-54,-52,-53,-51,-52,]),'DIVIDE_ASSIGN':([21,25,34,116,120,122,136,137,158,167,168,],[-50,74,-49,-51,-48,-50,-54,-52,-53,-51,-52,]),'FLOOR_DIVIDE_ASSIGN':([21,25,34,116,120,122,136,137,158,167,168,],[-50,75,-49,-51,-48,-50,-54,-52,-53,-51,-52,]),'MOD_ASSIGN':([21,25,34,116,120,122,136,137,158,167,168,],[-50,76,-49,-51,-48,-50,-54,-52,-53,-51,-52,]),'POWER_ASSIGN':([21,25,34,116,120,122,136,137,158,167,168,],[-50,77,-49,-51,-48,-50,-54,-52,-53,-51,-52,]),'RPAREN':([23,30,35,36,37,38,39,59,60,65,66,67,68,79,82,83,84,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,114,115,121,131,132,133,138,144,145,148,149,150,151,153,155,156,157,166,169,176,],[-97,-19,-33,-34,-35,-44,-45,-97,-46,115,116,-93,-94,-87,-58,-61,-62,-64,-67,-68,-69,-70,-72,-73,-76,-77,-78,-79,-80,-81,-82,-83,144,-22,-23,-97,155,-86,-25,-57,-47,-55,-32,165,-21,-96,167,-84,-87,-56,-22,-85,-20,]),'COLON':([30,35,36,37,38,39,58,60,62,69,82,83,84,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,133,138,144,145,147,155,157,165,171,172,],[-19,-33,-34,-35,-44,-45,109,-46,112,118,-58,-61,-62,140,-64,-67,-68,-69,-70,-72,-73,-76,-77,-78,-79,-80,-81,-82,-83,-23,-25,-57,-47,-55,164,-84,-56,175,177,178,]),'COMMA':([30,35,36,37,38,39,60,65,67,82,83,84,88,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,132,133,138,144,145,148,150,151,155,157,160,],[-19,-33,-34,-35,-44,-45,-46,-95,117,-58,-61,-62,-95,139,-64,-67,-68,-69,-70,-72,-73,-76,-77,-78,-79,-80,-81,-82,-83,-23,156,-25,-57,-47,-55,-32,166,-96,-84,-56,-92,]),'RBRACKET':([30,35,36,37,38,39,40,60,61,67,68,82,83,84,87,88,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,115,123,133,134,135,138,144,145,151,154,155,157,],[-19,-33,-34,-35,-44,-45,-97,-46,-97,-93,-94,-58,-61,-62,137,-95,-64,-67,-68,-69,-70,-72,-73,-76,-77,-78,-79,-80,-81,-82,-83,145,-23,-97,-25,157,158,-57,-47,-55,-96,168,-84,-56,]),'RBRACE':([30,35,36,37,38,39,41,60,82,83,84,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,133,138,144,145,155,157,159,160,],[-19,-33,-34,-35,-44,-45,-97,-46,-58,-61,-62,138,-90,-91,-88,-64,-67,-68,-69,-70,-72,-73,-76,-77,-78,-79,-80,-81,-82,-83,-23,-25,-57,-47,-55,-84,-56,-89,-92,]),'IN':([63,],[113,]),'INDENT':([109,112,118,164,175,177,178,],[143,143,143,143,143,143,143,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'module':([0,],[1,]),'statement_list':([0,143,],[2,163,]),'statement':([0,2,143,163,],[3,42,3,42,]),'simple_statement':([0,2,109,112,118,143,163,164,175,177,178,],[4,4,142,142,142,4,4,142,142,142,142,]),'compound_statement':([0,2,143,163,],[5,5,5,5,]),'small_stmt':([0,2,109,112,118,143,163,164,175,177,178,],[6,6,6,6,6,6,6,6,6,6,6,]),'if_stmt':([0,2,143,163,],[7,7,7,7,]),'while_stmt':([0,2,143,163,],[8,8,8,8,]),'for_stmt':([0,2,143,163,],[9,9,9,9,]),'funcdef':([0,2,143,163,],[10,10,10,10,]),'classdef':([0,2,143,163,],[11,11,11,11,]),'assignment':([0,2,109,112,118,143,163,164,175,177,178,],[12,12,12,12,12,12,12,12,12,12,12,]),'return_stmt':([0,2,109,112,118,143,163,164,175,177,178,],[13,13,13,13,13,13,13,13,13,13,13,]),'break_stmt':([0,2,109,112,118,143,163,164,175,177,178,],[14,14,14,14,14,14,14,14,14,14,14,]),'continue_stmt':([0,2,109,112,118,143,163,164,175,177,178,],[15,15,15,15,15,15,15,15,15,15,15,]),'pass_stmt':([0,2,109,112,118,143,163,164,175,177,178,],[16,16,16,16,16,16,16,16,16,16,16,]),'expr':([0,2,18,19,23,26,31,32,33,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,61,70,71,72,73,74,75,76,77,79,81,85,109,112,113,117,118,121,123,139,140,143,156,162,163,164,175,177,178,],[17,17,58,62,65,78,82,83,84,88,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,65,88,119,124,125,126,127,128,129,130,132,134,135,17,17,147,151,17,65,88,93,160,17,132,172,17,17,17,17,17,]),'assign_targets':([0,2,109,112,118,143,163,164,175,177,178,],[25,25,25,25,25,25,25,25,25,25,25,]),'atom':([0,2,18,19,23,26,31,32,33,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,61,70,71,72,73,74,75,76,77,79,81,85,109,112,113,117,118,121,123,139,140,143,156,162,163,164,175,177,178,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'target':([0,2,70,109,112,118,143,163,164,175,177,178,],[34,34,120,34,34,34,34,34,34,34,34,34,]),'elements_opt':([23,40,59,61,121,123,],[66,87,110,111,153,154,]),'elements':([23,40,59,61,121,123,],[67,67,67,67,67,67,]),'empty':([23,40,41,59,61,121,123,],[68,68,91,68,68,68,68,]),'key_value_list_opt':([41,],[89,]),'key_value_list':([41,139,],[90,159,]),'key_value':([41,139,],[92,92,]),'arg_list_opt':([79,156,],[131,169,]),'suite':([109,112,118,164,175,177,178,],[141,146,152,174,179,180,181,]),'param_list_opt':([114,166,],[149,176,]),'param':([114,166,],[150,150,]),'elif_blocks':([141,181,],[161,182,]),'else_block_opt':([161,],[170,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('if_stmt -> IF expr COLON suite elif_blocks else_block_opt','if_stmt',6,'p_if_stmt','parser_conditionals.py',7),
  ('compound_statement -> if_stmt','compound_statement',1,'p_compound_statement','parser_blocks.py',8),
  ('compound_statement -> while_stmt','compound_statement',1,'p_compound_statement','parser_blocks.py',9),
  ('compound_statement -> for_stmt','compound_statement',1,'p_compound_statement','parser_blocks.py',10),
  ('compound_statement -> funcdef','compound_statement',1,'p_compound_statement','parser_blocks.py',11),
  ('compound_statement -> classdef','compound_statement',1,'p_compound_statement','parser_blocks.py',12),
  ('funcdef -> DEF ID LPAREN param_list_opt RPAREN COLON suite','funcdef',7,'p_funcdef','parser_definitions.py',9),
  ('while_stmt -> WHILE expr COLON suite','while_stmt',4,'p_while_stmt','parser_loops.py',9),
  ('elif_blocks -> ELIF expr COLON suite elif_blocks','elif_blocks',5,'p_elif_blocks','parser_conditionals.py',10),
  ('elif_blocks -> <empty>','elif_blocks',0,'p_elif_blocks','parser_conditionals.py',11),
  ('for_stmt -> FOR ID IN expr COLON suite','for_stmt',6,'p_for_stmt','parser_loops.py',13),
  ('suite -> simple_statement','suite',1,'p_suite','parser_blocks.py',16),
  ('suite -> INDENT statement_list DEDENT','suite',3,'p_suite','parser_blocks.py',17),
  ('classdef -> CLASS ID COLON suite','classdef',4,'p_classdef','parser_definitions.py',16),
  ('else_block_opt -> ELSE COLON suite','else_block_opt',3,'p_else_block_opt','parser_conditionals.py',18),
  ('else_block_opt -> <empty>','else_block_opt',0,'p_else_block_opt','parser_conditionals.py',19),
  ('statement -> simple_statement','statement',1,'p_statement','parser_statements.py',21),
  ('statement -> compound_statement','statement',1,'p_statement','parser_statements.py',22),
  ('expr -> atom','expr',1,'p_expr_atom','parser_expressions.py',22),
  ('param_list_opt -> param COMMA param_list_opt','param_list_opt',3,'p_param_list_opt','parser_definitions.py',23),
  ('param_list_opt -> param','param_list_opt',1,'p_param_list_opt','parser_definitions.py',24),
  ('param_list_opt -> <empty>','param_list_opt',0,'p_param_list_opt','parser_definitions.py',25),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr_group','parser_expressions.py',26),
  ('simple_statement -> small_stmt','simple_statement',1,'p_simple_statement','parser_statements.py',27),
  ('atom -> atom DOT ID','atom',3,'p_atom_attribute','parser_expressions.py',30),
  ('small_stmt -> assignment','small_stmt',1,'p_small_stmt','parser_statements.py',31),
  ('small_stmt -> return_stmt','small_stmt',1,'p_small_stmt','parser_statements.py',32),
  ('small_stmt -> break_stmt','small_stmt',1,'p_small_stmt','parser_statements.py',33),
  ('small_stmt -> continue_stmt','small_stmt',1,'p_small_stmt','parser_statements.py',34),
  ('small_stmt -> pass_stmt','small_stmt',1,'p_small_stmt','parser_statements.py',35),
  ('small_stmt -> expr','small_stmt',1,'p_small_stmt','parser_statements.py',36),
  ('param -> ID','param',1,'p_param','parser_definitions.py',34),
  ('atom -> NUMBER','atom',1,'p_atom_number','parser_expressions.py',36),
  ('atom -> STRING','atom',1,'p_atom_string','parser_expressions.py',41),
  ('atom -> TRUE','atom',1,'p_atom_true','parser_expressions.py',46),
  ('assignment -> assign_targets ASSIGN expr','assignment',3,'p_assignment','parser_statements.py',46),
  ('assignment -> assign_targets PLUS_ASSIGN expr','assignment',3,'p_assignment','parser_statements.py',47),
  ('assignment -> assign_targets MINUS_ASSIGN expr','assignment',3,'p_assignment','parser_statements.py',48),
  ('assignment -> assign_targets TIMES_ASSIGN expr','assignment',3,'p_assignment','parser_statements.py',49),
  ('assignment -> assign_targets DIVIDE_ASSIGN expr','assignment',3,'p_assignment','parser_statements.py',50),
  ('assignment -> assign_targets FLOOR_DIVIDE_ASSIGN expr','assignment',3,'p_assignment','parser_statements.py',51),
  ('assignment -> assign_targets MOD_ASSIGN expr','assignment',3,'p_assignment','parser_statements.py',52),
  ('assignment -> assign_targets POWER_ASSIGN expr','assignment',3,'p_assignment','parser_statements.py',53),
  ('atom -> FALSE','atom',1,'p_atom_false','parser_expressions.py',51),
  ('atom -> NONE','atom',1,'p_atom_none','parser_expressions.py',56),
  ('atom -> ID','atom',1,'p_atom_identifier','parser_expressions.py',61),
  ('atom -> LPAREN elements_opt RPAREN','atom',3,'p_atom_paren','parser_expressions.py',67),
  ('assign_targets -> assign_targets ASSIGN target','assign_targets',3,'p_assign_targets','parser_statements.py',67),
  ('assign_targets -> target','assign_targets',1,'p_assign_targets','parser_statements.py',68),
  ('target -> ID','target',1,'p_target','parser_statements.py',75),
  ('target -> LPAREN elements_opt RPAREN','target',3,'p_target','parser_statements.py',76),
  ('target -> LBRACKET elements_opt RBRACKET','target',3,'p_target','parser_statements.py',77),
  ('target -> target LBRACKET expr RBRACKET','target',4,'p_target','parser_statements.py',78),
  ('target -> target DOT ID','target',3,'p_target','parser_statements.py',79),
  ('atom -> LBRACKET elements_opt RBRACKET','atom',3,'p_atom_list','parser_expressions.py',76),
  ('atom -> atom LBRACKET expr RBRACKET','atom',4,'p_atom_subscript','parser_expressions.py',81),
  ('atom -> LBRACE key_value_list_opt RBRACE','atom',3,'p_atom_dict','parser_expressions.py',87),
  ('expr -> PLUS expr','expr',2,'p_expr_unary_plus','parser_expressions.py',94),
  ('return_stmt -> RETURN expr','return_stmt',2,'p_return_stmt','parser_statements.py',99),
  ('return_stmt -> RETURN','return_stmt',1,'p_return_stmt','parser_statements.py',100),
  ('expr -> MINUS expr','expr',2,'p_expr_unary_minus','parser_expressions.py',100),
  ('expr -> NOT expr','expr',2,'p_expr_unary_not','parser_expressions.py',105),
  ('break_stmt -> BREAK','break_stmt',1,'p_break_stmt','parser_statements.py',107),
  ('expr -> expr POWER expr','expr',3,'p_expr_power','parser_expressions.py',111),
  ('continue_stmt -> CONTINUE','continue_stmt',1,'p_continue_stmt','parser_statements.py',111),
  ('pass_stmt -> PASS','pass_stmt',1,'p_pass_stmt','parser_statements.py',115),
  ('expr -> expr TIMES expr','expr',3,'p_expr_multiplicative','parser_expressions.py',116),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr_multiplicative','parser_expressions.py',117),
  ('expr -> expr FLOOR_DIVIDE expr','expr',3,'p_expr_multiplicative','parser_expressions.py',118),
  ('expr -> expr MOD expr','expr',3,'p_expr_multiplicative','parser_expressions.py',119),
  ('module -> statement_list','module',1,'p_module','parser.py',119),
  ('expr -> expr PLUS expr','expr',3,'p_expr_additive','parser_expressions.py',124),
  ('expr -> expr MINUS expr','expr',3,'p_expr_additive','parser_expressions.py',125),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',126),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',127),
  ('expr -> expr EQUALS expr','expr',3,'p_expr_comparison','parser_expressions.py',131),
  ('expr -> expr NOT_EQUALS expr','expr',3,'p_expr_comparison','parser_expressions.py',132),
  ('expr -> expr LESS_THAN expr','expr',3,'p_expr_comparison','parser_expressions.py',133),
  ('expr -> expr LESS_THAN_EQUALS expr','expr',3,'p_expr_comparison','parser_expressions.py',134),
  ('expr -> expr GREATER_THAN expr','expr',3,'p_expr_comparison','parser_expressions.py',135),
  ('expr -> expr GREATER_THAN_EQUALS expr','expr',3,'p_expr_comparison','parser_expressions.py',136),
  ('expr -> expr AND expr','expr',3,'p_expr_logical','parser_expressions.py',142),
  ('expr -> expr OR expr','expr',3,'p_expr_logical','parser_expressions.py',143),
  ('expr -> atom LPAREN arg_list_opt RPAREN','expr',4,'p_expr_call','parser_expressions.py',149),
  ('arg_list_opt -> expr COMMA arg_list_opt','arg_list_opt',3,'p_arg_list_opt','parser_expressions.py',155),
  ('arg_list_opt -> expr','arg_list_opt',1,'p_arg_list_opt','parser_expressions.py',156),
  ('arg_list_opt -> <empty>','arg_list_opt',0,'p_arg_list_opt_empty','parser_expressions.py',163),
  ('key_value_list -> key_value','key_value_list',1,'p_key_value_list','parser_expressions.py',167),
  ('key_value_list -> key_value COMMA key_value_list','key_value_list',3,'p_key_value_list','parser_expressions.py',168),
  ('key_value_list_opt -> key_value_list','key_value_list_opt',1,'p_key_value_list_opt','parser_expressions.py',175),
  ('key_value_list_opt -> empty','key_value_list_opt',1,'p_key_value_list_opt','parser_expressions.py',176),
  ('key_value -> expr COLON expr','key_value',3,'p_key_value','parser_expressions.py',180),
  ('elements_opt -> elements','elements_opt',1,'p_elements_opt','parser_expressions.py',184),
  ('elements_opt -> empty','elements_opt',1,'p_elements_opt','parser_expressions.py',185),
  ('elements -> expr','elements',1,'p_elements','parser_expressions.py',189),
  ('elements -> elements COMMA expr','elements',3,'p_elements','parser_expressions.py',190),
  ('empty -> <empty>','empty',0,'p_empty','parser_expressions.py',197),
]
