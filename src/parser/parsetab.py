
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'moduleleftORleftANDleftEQUALSNOT_EQUALSLESS_THANLESS_THAN_EQUALSGREATER_THANGREATER_THAN_EQUALSleftPLUSMINUSleftTIMESDIVIDEFLOOR_DIVIDEMODrightUPLUSUMINUSNOTrightPOWERAND ASSIGN BREAK CLASS COLON COMMA CONTINUE DEDENT DEF DIVIDE DIVIDE_ASSIGN DOT ELIF ELSE EQUALS FALSE FLOOR_DIVIDE FLOOR_DIVIDE_ASSIGN FOR GREATER_THAN GREATER_THAN_EQUALS ID IF IN INDENT LBRACE LBRACKET LESS_THAN LESS_THAN_EQUALS LPAREN MINUS MINUS_ASSIGN MOD MOD_ASSIGN NEWLINE NONE NOT NOT_EQUALS NUMBER OR PASS PLUS PLUS_ASSIGN POWER POWER_ASSIGN RBRACE RBRACKET RETURN RPAREN STRING TIMES TIMES_ASSIGN TRUE WHILEcompound_statement : if_stmt\n| while_stmt\n| for_stmt\n| funcdef\n| classdefif_stmt : IF expr COLON suite elif_blocks else_block_optfuncdef : DEF ID LPAREN param_list_opt RPAREN COLON statement_listwhile_stmt : WHILE expr COLON suitestatement : simple_statement\n| compound_statementelif_blocks : ELIF expr COLON suite elif_blocks\n|expr : atomfor_stmt : FOR ID IN expr COLON suiteclassdef : CLASS ID COLON statement_listsuite : simple_statement\n| INDENT statement_list DEDENTexpr : LPAREN expr RPARENsimple_statement : small_stmtelse_block_opt : ELSE COLON suite\n|param_list_opt : param COMMA param_list_opt\n| param\n|atom : atom DOT IDsmall_stmt : assignment\n| return_stmt\n| break_stmt\n| continue_stmt\n| pass_stmt\n| expratom : NUMBERparam : IDatom : STRINGassignment : assign_targets ASSIGN expr\n| assign_targets PLUS_ASSIGN expr\n| assign_targets MINUS_ASSIGN expr\n| assign_targets TIMES_ASSIGN expr\n| assign_targets DIVIDE_ASSIGN expr\n| assign_targets FLOOR_DIVIDE_ASSIGN expr\n| assign_targets MOD_ASSIGN expr\n| assign_targets POWER_ASSIGN expratom : TRUEatom : FALSEatom : NONEatom : IDassign_targets : assign_targets ASSIGN target\n| targetatom : LPAREN elements_opt RPARENtarget : ID\n| LPAREN elements_opt RPAREN\n| LBRACKET elements_opt RBRACKET\n| target LBRACKET expr RBRACKET\n| target DOT IDatom : LBRACKET elements_opt RBRACKETatom : LBRACE key_value_list_opt RBRACEexpr : PLUS expr %prec UPLUSexpr : MINUS expr %prec UMINUSreturn_stmt : RETURN expr\n| RETURNexpr : NOT exprmodule : statement_listbreak_stmt : BREAKexpr : expr POWER expr %prec POWERcontinue_stmt : CONTINUEexpr : expr TIMES expr\n| expr DIVIDE expr\n| expr FLOOR_DIVIDE expr\n| expr MOD exprstatement_list : statement\n| statement_list statementpass_stmt : PASSexpr : expr PLUS expr\n| expr MINUS exprexpr : expr EQUALS expr\n| expr NOT_EQUALS expr\n| expr LESS_THAN expr\n| expr LESS_THAN_EQUALS expr\n| expr GREATER_THAN expr\n| expr GREATER_THAN_EQUALS exprexpr : expr AND expr\n| expr OR exprexpr : atom LPAREN arg_list_opt RPARENarg_list_opt : expr COMMA arg_list_opt\n| exprarg_list_opt :key_value_list : key_value\n| key_value COMMA key_value_listkey_value_list_opt : key_value_list\n| emptykey_value : expr COLON exprelements : expr\n| elements COMMA exprelements_opt : elements\n| emptyempty :'
    
_lr_action_items = {'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,42,60,78,81,82,83,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,114,115,117,118,121,123,124,125,126,127,128,129,132,135,136,139,140,141,142,143,144,150,153,158,160,164,165,167,170,171,172,176,177,178,179,],[18,18,-70,-9,-10,-19,-1,-2,-3,-4,-5,-26,-27,-28,-29,-30,-31,-46,-60,-63,-65,-72,-13,-32,-34,-43,-44,-45,-71,-46,-59,-57,-58,-61,-64,-66,-67,-68,-69,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-18,-49,18,-35,-46,-36,-37,-38,-39,-40,-41,-42,-25,-55,-56,-12,-16,18,-49,-55,-8,18,-83,-21,18,-49,-55,-6,-17,-14,18,18,-20,-12,-11,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,42,60,78,81,82,83,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,114,115,117,118,121,123,124,125,126,127,128,129,132,135,136,139,140,141,142,143,144,150,153,158,160,164,165,167,170,171,172,176,177,178,179,],[19,19,-70,-9,-10,-19,-1,-2,-3,-4,-5,-26,-27,-28,-29,-30,-31,-46,-60,-63,-65,-72,-13,-32,-34,-43,-44,-45,-71,-46,-59,-57,-58,-61,-64,-66,-67,-68,-69,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-18,-49,19,-35,-46,-36,-37,-38,-39,-40,-41,-42,-25,-55,-56,-12,-16,19,-49,-55,-8,19,-83,-21,19,-49,-55,-6,-17,-14,19,19,-20,-12,-11,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,42,60,78,81,82,83,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,114,115,117,118,121,123,124,125,126,127,128,129,132,135,136,139,140,141,142,143,144,150,153,158,160,164,165,167,170,171,172,176,177,178,179,],[20,20,-70,-9,-10,-19,-1,-2,-3,-4,-5,-26,-27,-28,-29,-30,-31,-46,-60,-63,-65,-72,-13,-32,-34,-43,-44,-45,-71,-46,-59,-57,-58,-61,-64,-66,-67,-68,-69,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-18,-49,20,-35,-46,-36,-37,-38,-39,-40,-41,-42,-25,-55,-56,-12,-16,20,-49,-55,-8,20,-83,-21,20,-49,-55,-6,-17,-14,20,20,-20,-12,-11,]),'DEF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,42,60,78,81,82,83,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,114,115,117,118,121,123,124,125,126,127,128,129,132,135,136,139,140,141,142,143,144,150,153,158,160,164,165,167,170,171,172,176,177,178,179,],[22,22,-70,-9,-10,-19,-1,-2,-3,-4,-5,-26,-27,-28,-29,-30,-31,-46,-60,-63,-65,-72,-13,-32,-34,-43,-44,-45,-71,-46,-59,-57,-58,-61,-64,-66,-67,-68,-69,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-18,-49,22,-35,-46,-36,-37,-38,-39,-40,-41,-42,-25,-55,-56,-12,-16,22,-49,-55,-8,22,-83,-21,22,-49,-55,-6,-17,-14,22,22,-20,-12,-11,]),'CLASS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,42,60,78,81,82,83,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,114,115,117,118,121,123,124,125,126,127,128,129,132,135,136,139,140,141,142,143,144,150,153,158,160,164,165,167,170,171,172,176,177,178,179,],[24,24,-70,-9,-10,-19,-1,-2,-3,-4,-5,-26,-27,-28,-29,-30,-31,-46,-60,-63,-65,-72,-13,-32,-34,-43,-44,-45,-71,-46,-59,-57,-58,-61,-64,-66,-67,-68,-69,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-18,-49,24,-35,-46,-36,-37,-38,-39,-40,-41,-42,-25,-55,-56,-12,-16,24,-49,-55,-8,24,-83,-21,24,-49,-55,-6,-17,-14,24,24,-20,-12,-11,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,42,60,78,81,82,83,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,114,115,117,118,121,123,124,125,126,127,128,129,132,135,136,139,140,141,142,143,144,150,153,158,160,161,164,165,167,170,171,172,174,175,176,177,178,179,],[26,26,-70,-9,-10,-19,-1,-2,-3,-4,-5,-26,-27,-28,-29,-30,-31,-46,-60,-63,-65,-72,-13,-32,-34,-43,-44,-45,-71,-46,-59,-57,-58,-61,-64,-66,-67,-68,-69,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,26,26,-18,-49,26,-35,-46,-36,-37,-38,-39,-40,-41,-42,-25,-55,-56,-12,-16,26,-49,-55,-8,26,-83,-21,26,26,-49,-55,-6,-17,-14,26,26,26,26,-20,-12,-11,]),'BREAK':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,42,60,78,81,82,83,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,114,115,117,118,121,123,124,125,126,127,128,129,132,135,136,139,140,141,142,143,144,150,153,158,160,161,164,165,167,170,171,172,174,175,176,177,178,179,],[27,27,-70,-9,-10,-19,-1,-2,-3,-4,-5,-26,-27,-28,-29,-30,-31,-46,-60,-63,-65,-72,-13,-32,-34,-43,-44,-45,-71,-46,-59,-57,-58,-61,-64,-66,-67,-68,-69,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,27,27,-18,-49,27,-35,-46,-36,-37,-38,-39,-40,-41,-42,-25,-55,-56,-12,-16,27,-49,-55,-8,27,-83,-21,27,27,-49,-55,-6,-17,-14,27,27,27,27,-20,-12,-11,]),'CONTINUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,42,60,78,81,82,83,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,114,115,117,118,121,123,124,125,126,127,128,129,132,135,136,139,140,141,142,143,144,150,153,158,160,161,164,165,167,170,171,172,174,175,176,177,178,179,],[28,28,-70,-9,-10,-19,-1,-2,-3,-4,-5,-26,-27,-28,-29,-30,-31,-46,-60,-63,-65,-72,-13,-32,-34,-43,-44,-45,-71,-46,-59,-57,-58,-61,-64,-66,-67,-68,-69,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,28,28,-18,-49,28,-35,-46,-36,-37,-38,-39,-40,-41,-42,-25,-55,-56,-12,-16,28,-49,-55,-8,28,-83,-21,28,28,-49,-55,-6,-17,-14,28,28,28,28,-20,-12,-11,]),'PASS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,42,60,78,81,82,83,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,114,115,117,118,121,123,124,125,126,127,128,129,132,135,136,139,140,141,142,143,144,150,153,158,160,161,164,165,167,170,171,172,174,175,176,177,178,179,],[29,29,-70,-9,-10,-19,-1,-2,-3,-4,-5,-26,-27,-28,-29,-30,-31,-46,-60,-63,-65,-72,-13,-32,-34,-43,-44,-45,-71,-46,-59,-57,-58,-61,-64,-66,-67,-68,-69,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,29,29,-18,-49,29,-35,-46,-36,-37,-38,-39,-40,-41,-42,-25,-55,-56,-12,-16,29,-49,-55,-8,29,-83,-21,29,29,-49,-55,-6,-17,-14,29,29,29,29,-20,-12,-11,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,64,70,71,72,73,74,75,76,77,78,79,81,82,83,84,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,132,135,136,137,138,139,140,141,142,143,144,150,153,154,158,159,160,161,164,165,167,170,171,172,174,175,176,177,178,179,],[23,23,-70,-9,-10,-19,-1,-2,-3,-4,-5,-26,-27,-28,-29,-30,-31,59,59,-46,59,59,-63,-65,-72,79,59,59,59,-32,-34,-43,-44,-45,59,59,-71,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-46,59,113,120,59,59,59,59,59,59,59,-59,59,-57,-58,-61,59,-64,-66,-67,-68,-69,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,23,23,59,-18,-49,59,23,-35,59,-46,59,-36,-37,-38,-39,-40,-41,-42,-25,-55,-56,59,59,-12,-16,23,-49,-55,-8,23,-83,59,-21,59,23,23,-49,-55,-6,-17,-14,23,23,23,23,-20,-12,-11,]),'PLUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,70,71,72,73,74,75,76,77,78,79,81,82,83,84,87,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,131,132,133,135,136,137,138,139,140,141,142,143,144,145,149,150,153,154,157,158,159,160,161,164,165,167,169,170,171,172,174,175,176,177,178,179,],[31,31,-70,-9,-10,-19,-1,-2,-3,-4,-5,-26,-27,-28,-29,-30,48,31,31,-46,31,31,-63,-65,-72,-13,31,31,31,-32,-34,-43,-44,-45,31,31,-71,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,48,31,-46,31,48,48,31,31,31,31,31,31,31,31,48,31,-57,-58,-61,31,48,48,-64,-66,-67,-68,-69,-73,-74,48,48,48,48,48,48,48,48,31,31,31,-18,-49,31,31,48,31,-46,31,48,48,48,48,48,48,48,48,-25,48,-55,-56,31,31,-12,-16,31,-49,-55,-8,48,48,31,-83,31,48,-21,31,31,31,-49,-55,-6,48,-17,-14,31,31,31,31,-20,-12,-11,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,70,71,72,73,74,75,76,77,78,79,81,82,83,84,87,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,131,132,133,135,136,137,138,139,140,141,142,143,144,145,149,150,153,154,157,158,159,160,161,164,165,167,169,170,171,172,174,175,176,177,178,179,],[32,32,-70,-9,-10,-19,-1,-2,-3,-4,-5,-26,-27,-28,-29,-30,49,32,32,-46,32,32,-63,-65,-72,-13,32,32,32,-32,-34,-43,-44,-45,32,32,-71,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,49,32,-46,32,49,49,32,32,32,32,32,32,32,32,49,32,-57,-58,-61,32,49,49,-64,-66,-67,-68,-69,-73,-74,49,49,49,49,49,49,49,49,32,32,32,-18,-49,32,32,49,32,-46,32,49,49,49,49,49,49,49,49,-25,49,-55,-56,32,32,-12,-16,32,-49,-55,-8,49,49,32,-83,32,49,-21,32,32,32,-49,-55,-6,49,-17,-14,32,32,32,32,-20,-12,-11,]),'NOT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,70,71,72,73,74,75,76,77,78,79,81,82,83,84,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,132,135,136,137,138,139,140,141,142,143,144,150,153,154,158,159,160,161,164,165,167,170,171,172,174,175,176,177,178,179,],[33,33,-70,-9,-10,-19,-1,-2,-3,-4,-5,-26,-27,-28,-29,-30,-31,33,33,-46,33,33,-63,-65,-72,-13,33,33,33,-32,-34,-43,-44,-45,33,33,-71,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-46,33,33,33,33,33,33,33,33,33,-59,33,-57,-58,-61,33,-64,-66,-67,-68,-69,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,33,33,33,-18,-49,33,33,-35,33,-46,33,-36,-37,-38,-39,-40,-41,-42,-25,-55,-56,33,33,-12,-16,33,-49,-55,-8,33,-83,33,-21,33,33,33,-49,-55,-6,-17,-14,33,33,33,33,-20,-12,-11,]),'NUMBER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,70,71,72,73,74,75,76,77,78,79,81,82,83,84,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,132,135,136,137,138,139,140,141,142,143,144,150,153,154,158,159,160,161,164,165,167,170,171,172,174,175,176,177,178,179,],[35,35,-70,-9,-10,-19,-1,-2,-3,-4,-5,-26,-27,-28,-29,-30,-31,35,35,-46,35,35,-63,-65,-72,-13,35,35,35,-32,-34,-43,-44,-45,35,35,-71,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-46,35,35,35,35,35,35,35,35,35,-59,35,-57,-58,-61,35,-64,-66,-67,-68,-69,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,35,35,35,-18,-49,35,35,-35,35,-46,35,-36,-37,-38,-39,-40,-41,-42,-25,-55,-56,35,35,-12,-16,35,-49,-55,-8,35,-83,35,-21,35,35,35,-49,-55,-6,-17,-14,35,35,35,35,-20,-12,-11,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,70,71,72,73,74,75,76,77,78,79,81,82,83,84,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,132,135,136,137,138,139,140,141,142,143,144,150,153,154,158,159,160,161,164,165,167,170,171,172,174,175,176,177,178,179,],[36,36,-70,-9,-10,-19,-1,-2,-3,-4,-5,-26,-27,-28,-29,-30,-31,36,36,-46,36,36,-63,-65,-72,-13,36,36,36,-32,-34,-43,-44,-45,36,36,-71,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-46,36,36,36,36,36,36,36,36,36,-59,36,-57,-58,-61,36,-64,-66,-67,-68,-69,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,36,36,36,-18,-49,36,36,-35,36,-46,36,-36,-37,-38,-39,-40,-41,-42,-25,-55,-56,36,36,-12,-16,36,-49,-55,-8,36,-83,36,-21,36,36,36,-49,-55,-6,-17,-14,36,36,36,36,-20,-12,-11,]),'TRUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,70,71,72,73,74,75,76,77,78,79,81,82,83,84,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,132,135,136,137,138,139,140,141,142,143,144,150,153,154,158,159,160,161,164,165,167,170,171,172,174,175,176,177,178,179,],[37,37,-70,-9,-10,-19,-1,-2,-3,-4,-5,-26,-27,-28,-29,-30,-31,37,37,-46,37,37,-63,-65,-72,-13,37,37,37,-32,-34,-43,-44,-45,37,37,-71,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-46,37,37,37,37,37,37,37,37,37,-59,37,-57,-58,-61,37,-64,-66,-67,-68,-69,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,37,37,37,-18,-49,37,37,-35,37,-46,37,-36,-37,-38,-39,-40,-41,-42,-25,-55,-56,37,37,-12,-16,37,-49,-55,-8,37,-83,37,-21,37,37,37,-49,-55,-6,-17,-14,37,37,37,37,-20,-12,-11,]),'FALSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,70,71,72,73,74,75,76,77,78,79,81,82,83,84,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,132,135,136,137,138,139,140,141,142,143,144,150,153,154,158,159,160,161,164,165,167,170,171,172,174,175,176,177,178,179,],[38,38,-70,-9,-10,-19,-1,-2,-3,-4,-5,-26,-27,-28,-29,-30,-31,38,38,-46,38,38,-63,-65,-72,-13,38,38,38,-32,-34,-43,-44,-45,38,38,-71,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-46,38,38,38,38,38,38,38,38,38,-59,38,-57,-58,-61,38,-64,-66,-67,-68,-69,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,38,38,38,-18,-49,38,38,-35,38,-46,38,-36,-37,-38,-39,-40,-41,-42,-25,-55,-56,38,38,-12,-16,38,-49,-55,-8,38,-83,38,-21,38,38,38,-49,-55,-6,-17,-14,38,38,38,38,-20,-12,-11,]),'NONE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,70,71,72,73,74,75,76,77,78,79,81,82,83,84,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,132,135,136,137,138,139,140,141,142,143,144,150,153,154,158,159,160,161,164,165,167,170,171,172,174,175,176,177,178,179,],[39,39,-70,-9,-10,-19,-1,-2,-3,-4,-5,-26,-27,-28,-29,-30,-31,39,39,-46,39,39,-63,-65,-72,-13,39,39,39,-32,-34,-43,-44,-45,39,39,-71,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-46,39,39,39,39,39,39,39,39,39,-59,39,-57,-58,-61,39,-64,-66,-67,-68,-69,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,39,39,39,-18,-49,39,39,-35,39,-46,39,-36,-37,-38,-39,-40,-41,-42,-25,-55,-56,39,39,-12,-16,39,-49,-55,-8,39,-83,39,-21,39,39,39,-49,-55,-6,-17,-14,39,39,39,39,-20,-12,-11,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,132,135,136,137,138,139,140,141,142,143,144,150,153,154,158,159,160,161,163,164,165,167,170,171,172,174,175,176,177,178,179,],[21,21,-70,-9,-10,-19,-1,-2,-3,-4,-5,-26,-27,-28,-29,-30,-31,60,60,63,-46,64,60,69,60,-63,-65,-72,-13,60,60,60,-32,-34,-43,-44,-45,60,60,-71,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-46,60,121,60,60,60,60,60,60,60,-59,60,132,-57,-58,-61,60,134,-64,-66,-67,-68,-69,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,21,21,60,146,-18,-49,60,21,-35,60,-46,60,-36,-37,-38,-39,-40,-41,-42,-25,-55,-56,60,60,-12,-16,21,-49,-55,-8,21,-83,60,-21,60,21,21,146,-49,-55,-6,-17,-14,21,21,21,21,-20,-12,-11,]),'LBRACKET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,70,71,72,73,74,75,76,77,78,79,81,82,83,84,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,132,134,135,136,137,138,139,140,141,142,143,144,150,153,154,155,158,159,160,161,164,165,167,170,171,172,174,175,176,177,178,179,],[40,40,-70,-9,-10,-19,-1,-2,-3,-4,-5,-26,-27,-28,-29,-30,-31,61,61,-46,61,61,-63,-65,-72,-13,61,61,61,84,-32,-34,-43,-44,-45,61,61,-71,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-46,61,122,61,61,61,61,61,61,61,-59,61,-57,-58,-61,61,-64,-66,-67,-68,-69,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,40,40,61,-18,-49,61,40,-35,84,61,-46,61,-36,-37,-38,-39,-40,-41,-42,-25,-54,-52,-56,61,61,-12,-16,40,-49,-55,-8,40,-83,61,-53,-21,61,40,40,-49,-52,-6,-17,-14,40,40,40,40,-20,-12,-11,]),'LBRACE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,70,71,72,73,74,75,76,77,78,79,81,82,83,84,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,132,135,136,137,138,139,140,141,142,143,144,150,153,154,158,159,160,161,164,165,167,170,171,172,174,175,176,177,178,179,],[41,41,-70,-9,-10,-19,-1,-2,-3,-4,-5,-26,-27,-28,-29,-30,-31,41,41,-46,41,41,-63,-65,-72,-13,41,41,41,-32,-34,-43,-44,-45,41,41,-71,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-46,41,41,41,41,41,41,41,41,41,-59,41,-57,-58,-61,41,-64,-66,-67,-68,-69,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,41,41,41,-18,-49,41,41,-35,41,-46,41,-36,-37,-38,-39,-40,-41,-42,-25,-55,-56,41,41,-12,-16,41,-49,-55,-8,41,-83,41,-21,41,41,41,-49,-55,-6,-17,-14,41,41,41,41,-20,-12,-11,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,42,60,78,81,82,83,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,114,115,118,121,123,124,125,126,127,128,129,132,135,136,139,140,142,143,144,150,153,158,164,165,167,170,171,176,177,178,179,],[0,-62,-70,-9,-10,-19,-1,-2,-3,-4,-5,-26,-27,-28,-29,-30,-31,-46,-60,-63,-65,-72,-13,-32,-34,-43,-44,-45,-71,-46,-59,-57,-58,-61,-64,-66,-67,-68,-69,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-18,-49,-35,-46,-36,-37,-38,-39,-40,-41,-42,-25,-55,-56,-12,-16,-49,-55,-8,-15,-83,-21,-49,-55,-6,-17,-14,-7,-20,-12,-11,]),'DEDENT':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,42,60,78,81,82,83,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,114,115,118,121,123,124,125,126,127,128,129,132,135,136,139,140,142,143,144,150,153,158,160,164,165,167,170,171,176,177,178,179,],[-70,-9,-10,-19,-1,-2,-3,-4,-5,-26,-27,-28,-29,-30,-31,-46,-60,-63,-65,-72,-13,-32,-34,-43,-44,-45,-71,-46,-59,-57,-58,-61,-64,-66,-67,-68,-69,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-18,-49,-35,-46,-36,-37,-38,-39,-40,-41,-42,-25,-55,-56,-12,-16,-49,-55,-8,-15,-83,-21,170,-49,-55,-6,-17,-14,-7,-20,-12,-11,]),'ELIF':([6,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,60,78,81,82,83,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,114,115,118,121,123,124,125,126,127,128,129,132,135,136,139,140,142,143,153,164,165,170,178,],[-19,-26,-27,-28,-29,-30,-31,-46,-60,-63,-65,-72,-13,-32,-34,-43,-44,-45,-46,-59,-57,-58,-61,-64,-66,-67,-68,-69,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-18,-49,-35,-46,-36,-37,-38,-39,-40,-41,-42,-25,-55,-56,159,-16,-49,-55,-83,-49,-55,-17,159,]),'ELSE':([6,12,13,14,15,16,17,21,26,27,28,29,30,35,36,37,38,39,60,78,81,82,83,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,114,115,118,121,123,124,125,126,127,128,129,132,135,136,139,140,142,143,153,158,164,165,170,178,179,],[-19,-26,-27,-28,-29,-30,-31,-46,-60,-63,-65,-72,-13,-32,-34,-43,-44,-45,-46,-59,-57,-58,-61,-64,-66,-67,-68,-69,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-18,-49,-35,-46,-36,-37,-38,-39,-40,-41,-42,-25,-55,-56,-12,-16,-49,-55,-83,168,-49,-55,-17,-12,-11,]),'POWER':([17,21,30,35,36,37,38,39,58,60,62,65,78,81,82,83,87,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,114,115,118,121,123,124,125,126,127,128,129,131,132,133,135,136,142,143,145,149,153,157,164,165,169,],[43,-46,-13,-32,-34,-43,-44,-45,43,-46,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-18,-49,43,-46,43,43,43,43,43,43,43,43,-25,43,-55,-56,-49,-55,43,43,-83,43,-49,-55,43,]),'TIMES':([17,21,30,35,36,37,38,39,58,60,62,65,78,81,82,83,87,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,114,115,118,121,123,124,125,126,127,128,129,131,132,133,135,136,142,143,145,149,153,157,164,165,169,],[44,-46,-13,-32,-34,-43,-44,-45,44,-46,44,44,44,-57,-58,-61,44,44,-64,-66,-67,-68,-69,44,44,44,44,44,44,44,44,44,44,-18,-49,44,-46,44,44,44,44,44,44,44,44,-25,44,-55,-56,-49,-55,44,44,-83,44,-49,-55,44,]),'DIVIDE':([17,21,30,35,36,37,38,39,58,60,62,65,78,81,82,83,87,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,114,115,118,121,123,124,125,126,127,128,129,131,132,133,135,136,142,143,145,149,153,157,164,165,169,],[45,-46,-13,-32,-34,-43,-44,-45,45,-46,45,45,45,-57,-58,-61,45,45,-64,-66,-67,-68,-69,45,45,45,45,45,45,45,45,45,45,-18,-49,45,-46,45,45,45,45,45,45,45,45,-25,45,-55,-56,-49,-55,45,45,-83,45,-49,-55,45,]),'FLOOR_DIVIDE':([17,21,30,35,36,37,38,39,58,60,62,65,78,81,82,83,87,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,114,115,118,121,123,124,125,126,127,128,129,131,132,133,135,136,142,143,145,149,153,157,164,165,169,],[46,-46,-13,-32,-34,-43,-44,-45,46,-46,46,46,46,-57,-58,-61,46,46,-64,-66,-67,-68,-69,46,46,46,46,46,46,46,46,46,46,-18,-49,46,-46,46,46,46,46,46,46,46,46,-25,46,-55,-56,-49,-55,46,46,-83,46,-49,-55,46,]),'MOD':([17,21,30,35,36,37,38,39,58,60,62,65,78,81,82,83,87,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,114,115,118,121,123,124,125,126,127,128,129,131,132,133,135,136,142,143,145,149,153,157,164,165,169,],[47,-46,-13,-32,-34,-43,-44,-45,47,-46,47,47,47,-57,-58,-61,47,47,-64,-66,-67,-68,-69,47,47,47,47,47,47,47,47,47,47,-18,-49,47,-46,47,47,47,47,47,47,47,47,-25,47,-55,-56,-49,-55,47,47,-83,47,-49,-55,47,]),'EQUALS':([17,21,30,35,36,37,38,39,58,60,62,65,78,81,82,83,87,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,114,115,118,121,123,124,125,126,127,128,129,131,132,133,135,136,142,143,145,149,153,157,164,165,169,],[50,-46,-13,-32,-34,-43,-44,-45,50,-46,50,50,50,-57,-58,-61,50,50,-64,-66,-67,-68,-69,-73,-74,-75,-76,-77,-78,-79,-80,50,50,-18,-49,50,-46,50,50,50,50,50,50,50,50,-25,50,-55,-56,-49,-55,50,50,-83,50,-49,-55,50,]),'NOT_EQUALS':([17,21,30,35,36,37,38,39,58,60,62,65,78,81,82,83,87,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,114,115,118,121,123,124,125,126,127,128,129,131,132,133,135,136,142,143,145,149,153,157,164,165,169,],[51,-46,-13,-32,-34,-43,-44,-45,51,-46,51,51,51,-57,-58,-61,51,51,-64,-66,-67,-68,-69,-73,-74,-75,-76,-77,-78,-79,-80,51,51,-18,-49,51,-46,51,51,51,51,51,51,51,51,-25,51,-55,-56,-49,-55,51,51,-83,51,-49,-55,51,]),'LESS_THAN':([17,21,30,35,36,37,38,39,58,60,62,65,78,81,82,83,87,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,114,115,118,121,123,124,125,126,127,128,129,131,132,133,135,136,142,143,145,149,153,157,164,165,169,],[52,-46,-13,-32,-34,-43,-44,-45,52,-46,52,52,52,-57,-58,-61,52,52,-64,-66,-67,-68,-69,-73,-74,-75,-76,-77,-78,-79,-80,52,52,-18,-49,52,-46,52,52,52,52,52,52,52,52,-25,52,-55,-56,-49,-55,52,52,-83,52,-49,-55,52,]),'LESS_THAN_EQUALS':([17,21,30,35,36,37,38,39,58,60,62,65,78,81,82,83,87,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,114,115,118,121,123,124,125,126,127,128,129,131,132,133,135,136,142,143,145,149,153,157,164,165,169,],[53,-46,-13,-32,-34,-43,-44,-45,53,-46,53,53,53,-57,-58,-61,53,53,-64,-66,-67,-68,-69,-73,-74,-75,-76,-77,-78,-79,-80,53,53,-18,-49,53,-46,53,53,53,53,53,53,53,53,-25,53,-55,-56,-49,-55,53,53,-83,53,-49,-55,53,]),'GREATER_THAN':([17,21,30,35,36,37,38,39,58,60,62,65,78,81,82,83,87,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,114,115,118,121,123,124,125,126,127,128,129,131,132,133,135,136,142,143,145,149,153,157,164,165,169,],[54,-46,-13,-32,-34,-43,-44,-45,54,-46,54,54,54,-57,-58,-61,54,54,-64,-66,-67,-68,-69,-73,-74,-75,-76,-77,-78,-79,-80,54,54,-18,-49,54,-46,54,54,54,54,54,54,54,54,-25,54,-55,-56,-49,-55,54,54,-83,54,-49,-55,54,]),'GREATER_THAN_EQUALS':([17,21,30,35,36,37,38,39,58,60,62,65,78,81,82,83,87,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,114,115,118,121,123,124,125,126,127,128,129,131,132,133,135,136,142,143,145,149,153,157,164,165,169,],[55,-46,-13,-32,-34,-43,-44,-45,55,-46,55,55,55,-57,-58,-61,55,55,-64,-66,-67,-68,-69,-73,-74,-75,-76,-77,-78,-79,-80,55,55,-18,-49,55,-46,55,55,55,55,55,55,55,55,-25,55,-55,-56,-49,-55,55,55,-83,55,-49,-55,55,]),'AND':([17,21,30,35,36,37,38,39,58,60,62,65,78,81,82,83,87,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,114,115,118,121,123,124,125,126,127,128,129,131,132,133,135,136,142,143,145,149,153,157,164,165,169,],[56,-46,-13,-32,-34,-43,-44,-45,56,-46,56,56,56,-57,-58,-61,56,56,-64,-66,-67,-68,-69,-73,-74,-75,-76,-77,-78,-79,-80,-81,56,-18,-49,56,-46,56,56,56,56,56,56,56,56,-25,56,-55,-56,-49,-55,56,56,-83,56,-49,-55,56,]),'OR':([17,21,30,35,36,37,38,39,58,60,62,65,78,81,82,83,87,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,114,115,118,121,123,124,125,126,127,128,129,131,132,133,135,136,142,143,145,149,153,157,164,165,169,],[57,-46,-13,-32,-34,-43,-44,-45,57,-46,57,57,57,-57,-58,-61,57,57,-64,-66,-67,-68,-69,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-18,-49,57,-46,57,57,57,57,57,57,57,57,-25,57,-55,-56,-49,-55,57,57,-83,57,-49,-55,57,]),'DOT':([21,30,34,35,36,37,38,39,60,115,119,121,132,134,135,136,142,143,155,164,165,],[-46,80,85,-32,-34,-43,-44,-45,-46,-49,85,-46,-25,-54,-52,-56,-49,-55,-53,-49,-52,]),'ASSIGN':([21,25,34,115,119,121,134,135,155,164,165,],[-50,70,-48,-51,-47,-50,-54,-52,-53,-51,-52,]),'PLUS_ASSIGN':([21,25,34,115,119,121,134,135,155,164,165,],[-50,71,-48,-51,-47,-50,-54,-52,-53,-51,-52,]),'MINUS_ASSIGN':([21,25,34,115,119,121,134,135,155,164,165,],[-50,72,-48,-51,-47,-50,-54,-52,-53,-51,-52,]),'TIMES_ASSIGN':([21,25,34,115,119,121,134,135,155,164,165,],[-50,73,-48,-51,-47,-50,-54,-52,-53,-51,-52,]),'DIVIDE_ASSIGN':([21,25,34,115,119,121,134,135,155,164,165,],[-50,74,-48,-51,-47,-50,-54,-52,-53,-51,-52,]),'FLOOR_DIVIDE_ASSIGN':([21,25,34,115,119,121,134,135,155,164,165,],[-50,75,-48,-51,-47,-50,-54,-52,-53,-51,-52,]),'MOD_ASSIGN':([21,25,34,115,119,121,134,135,155,164,165,],[-50,76,-48,-51,-47,-50,-54,-52,-53,-51,-52,]),'POWER_ASSIGN':([21,25,34,115,119,121,134,135,155,164,165,],[-50,77,-48,-51,-47,-50,-54,-52,-53,-51,-52,]),'RPAREN':([23,30,35,36,37,38,39,59,60,65,66,67,68,79,81,82,83,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,113,114,120,130,131,132,136,142,143,146,147,148,149,151,153,154,163,166,173,],[-96,-13,-32,-34,-43,-44,-45,-96,-46,114,115,-94,-95,-86,-57,-58,-61,-64,-66,-67,-68,-69,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,142,-24,-18,-96,153,-85,-25,-56,-49,-55,-33,162,-23,-93,164,-83,-86,-24,-84,-22,]),'COLON':([30,35,36,37,38,39,58,60,62,69,81,82,83,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,114,132,136,142,143,145,153,162,168,169,],[-13,-32,-34,-43,-44,-45,108,-46,111,117,-57,-58,-61,138,-64,-66,-67,-68,-69,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-18,-25,-56,-49,-55,161,-83,172,174,175,]),'COMMA':([30,35,36,37,38,39,60,65,67,81,82,83,87,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,114,131,132,136,142,143,146,148,149,153,157,],[-13,-32,-34,-43,-44,-45,-46,-92,116,-57,-58,-61,-92,137,-64,-66,-67,-68,-69,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-18,154,-25,-56,-49,-55,-33,163,-93,-83,-91,]),'RBRACKET':([30,35,36,37,38,39,40,60,61,67,68,81,82,83,86,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,110,114,122,132,133,136,142,143,149,152,153,],[-13,-32,-34,-43,-44,-45,-96,-46,-96,-94,-95,-57,-58,-61,135,-92,-64,-66,-67,-68,-69,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,143,-18,-96,-25,155,-56,-49,-55,-93,165,-83,]),'RBRACE':([30,35,36,37,38,39,41,60,81,82,83,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,114,132,136,142,143,153,156,157,],[-13,-32,-34,-43,-44,-45,-96,-46,-57,-58,-61,136,-89,-90,-87,-64,-66,-67,-68,-69,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-18,-25,-56,-49,-55,-83,-88,-91,]),'IN':([63,],[112,]),'INDENT':([108,111,161,174,175,],[141,141,141,141,141,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'module':([0,],[1,]),'statement_list':([0,117,141,172,],[2,150,160,176,]),'statement':([0,2,117,141,150,160,172,176,],[3,42,3,3,42,42,3,42,]),'simple_statement':([0,2,108,111,117,141,150,160,161,172,174,175,176,],[4,4,140,140,4,4,4,4,140,4,140,140,4,]),'compound_statement':([0,2,117,141,150,160,172,176,],[5,5,5,5,5,5,5,5,]),'small_stmt':([0,2,108,111,117,141,150,160,161,172,174,175,176,],[6,6,6,6,6,6,6,6,6,6,6,6,6,]),'if_stmt':([0,2,117,141,150,160,172,176,],[7,7,7,7,7,7,7,7,]),'while_stmt':([0,2,117,141,150,160,172,176,],[8,8,8,8,8,8,8,8,]),'for_stmt':([0,2,117,141,150,160,172,176,],[9,9,9,9,9,9,9,9,]),'funcdef':([0,2,117,141,150,160,172,176,],[10,10,10,10,10,10,10,10,]),'classdef':([0,2,117,141,150,160,172,176,],[11,11,11,11,11,11,11,11,]),'assignment':([0,2,108,111,117,141,150,160,161,172,174,175,176,],[12,12,12,12,12,12,12,12,12,12,12,12,12,]),'return_stmt':([0,2,108,111,117,141,150,160,161,172,174,175,176,],[13,13,13,13,13,13,13,13,13,13,13,13,13,]),'break_stmt':([0,2,108,111,117,141,150,160,161,172,174,175,176,],[14,14,14,14,14,14,14,14,14,14,14,14,14,]),'continue_stmt':([0,2,108,111,117,141,150,160,161,172,174,175,176,],[15,15,15,15,15,15,15,15,15,15,15,15,15,]),'pass_stmt':([0,2,108,111,117,141,150,160,161,172,174,175,176,],[16,16,16,16,16,16,16,16,16,16,16,16,16,]),'expr':([0,2,18,19,23,26,31,32,33,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,61,70,71,72,73,74,75,76,77,79,84,108,111,112,116,117,120,122,137,138,141,150,154,159,160,161,172,174,175,176,],[17,17,58,62,65,78,81,82,83,87,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,65,87,118,123,124,125,126,127,128,129,131,133,17,17,145,149,17,65,87,92,157,17,17,131,169,17,17,17,17,17,17,]),'assign_targets':([0,2,108,111,117,141,150,160,161,172,174,175,176,],[25,25,25,25,25,25,25,25,25,25,25,25,25,]),'atom':([0,2,18,19,23,26,31,32,33,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,61,70,71,72,73,74,75,76,77,79,84,108,111,112,116,117,120,122,137,138,141,150,154,159,160,161,172,174,175,176,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'target':([0,2,70,108,111,117,141,150,160,161,172,174,175,176,],[34,34,119,34,34,34,34,34,34,34,34,34,34,34,]),'elements_opt':([23,40,59,61,120,122,],[66,86,109,110,151,152,]),'elements':([23,40,59,61,120,122,],[67,67,67,67,67,67,]),'empty':([23,40,41,59,61,120,122,],[68,68,90,68,68,68,68,]),'key_value_list_opt':([41,],[88,]),'key_value_list':([41,137,],[89,156,]),'key_value':([41,137,],[91,91,]),'arg_list_opt':([79,154,],[130,166,]),'suite':([108,111,161,174,175,],[139,144,171,177,178,]),'param_list_opt':([113,163,],[147,173,]),'param':([113,163,],[148,148,]),'elif_blocks':([139,178,],[158,179,]),'else_block_opt':([158,],[167,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('compound_statement -> if_stmt','compound_statement',1,'p_compound_statement','parser_blocks.py',10),
  ('compound_statement -> while_stmt','compound_statement',1,'p_compound_statement','parser_blocks.py',11),
  ('compound_statement -> for_stmt','compound_statement',1,'p_compound_statement','parser_blocks.py',12),
  ('compound_statement -> funcdef','compound_statement',1,'p_compound_statement','parser_blocks.py',13),
  ('compound_statement -> classdef','compound_statement',1,'p_compound_statement','parser_blocks.py',14),
  ('if_stmt -> IF expr COLON suite elif_blocks else_block_opt','if_stmt',6,'p_if_stmt','parser_conditionals.py',10),
  ('funcdef -> DEF ID LPAREN param_list_opt RPAREN COLON statement_list','funcdef',7,'p_funcdef','parser_definitions.py',10),
  ('while_stmt -> WHILE expr COLON suite','while_stmt',4,'p_while_stmt','parser_loops.py',10),
  ('statement -> simple_statement','statement',1,'p_statement','parser_statements.py',13),
  ('statement -> compound_statement','statement',1,'p_statement','parser_statements.py',14),
  ('elif_blocks -> ELIF expr COLON suite elif_blocks','elif_blocks',5,'p_elif_blocks','parser_conditionals.py',14),
  ('elif_blocks -> <empty>','elif_blocks',0,'p_elif_blocks','parser_conditionals.py',15),
  ('expr -> atom','expr',1,'p_expr_atom','parser_expressions.py',14),
  ('for_stmt -> FOR ID IN expr COLON suite','for_stmt',6,'p_for_stmt','parser_loops.py',14),
  ('classdef -> CLASS ID COLON statement_list','classdef',4,'p_classdef','parser_definitions.py',16),
  ('suite -> simple_statement','suite',1,'p_suite','parser_blocks.py',18),
  ('suite -> INDENT statement_list DEDENT','suite',3,'p_suite','parser_blocks.py',19),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr_group','parser_expressions.py',18),
  ('simple_statement -> small_stmt','simple_statement',1,'p_simple_statement','parser_statements.py',18),
  ('else_block_opt -> ELSE COLON suite','else_block_opt',3,'p_else_block_opt','parser_conditionals.py',22),
  ('else_block_opt -> <empty>','else_block_opt',0,'p_else_block_opt','parser_conditionals.py',23),
  ('param_list_opt -> param COMMA param_list_opt','param_list_opt',3,'p_param_list_opt','parser_definitions.py',22),
  ('param_list_opt -> param','param_list_opt',1,'p_param_list_opt','parser_definitions.py',23),
  ('param_list_opt -> <empty>','param_list_opt',0,'p_param_list_opt','parser_definitions.py',24),
  ('atom -> atom DOT ID','atom',3,'p_atom_attribute','parser_expressions.py',22),
  ('small_stmt -> assignment','small_stmt',1,'p_small_stmt','parser_statements.py',22),
  ('small_stmt -> return_stmt','small_stmt',1,'p_small_stmt','parser_statements.py',23),
  ('small_stmt -> break_stmt','small_stmt',1,'p_small_stmt','parser_statements.py',24),
  ('small_stmt -> continue_stmt','small_stmt',1,'p_small_stmt','parser_statements.py',25),
  ('small_stmt -> pass_stmt','small_stmt',1,'p_small_stmt','parser_statements.py',26),
  ('small_stmt -> expr','small_stmt',1,'p_small_stmt','parser_statements.py',27),
  ('atom -> NUMBER','atom',1,'p_atom_number','parser_expressions.py',28),
  ('param -> ID','param',1,'p_param','parser_definitions.py',33),
  ('atom -> STRING','atom',1,'p_atom_string','parser_expressions.py',33),
  ('assignment -> assign_targets ASSIGN expr','assignment',3,'p_assignment','parser_statements.py',37),
  ('assignment -> assign_targets PLUS_ASSIGN expr','assignment',3,'p_assignment','parser_statements.py',38),
  ('assignment -> assign_targets MINUS_ASSIGN expr','assignment',3,'p_assignment','parser_statements.py',39),
  ('assignment -> assign_targets TIMES_ASSIGN expr','assignment',3,'p_assignment','parser_statements.py',40),
  ('assignment -> assign_targets DIVIDE_ASSIGN expr','assignment',3,'p_assignment','parser_statements.py',41),
  ('assignment -> assign_targets FLOOR_DIVIDE_ASSIGN expr','assignment',3,'p_assignment','parser_statements.py',42),
  ('assignment -> assign_targets MOD_ASSIGN expr','assignment',3,'p_assignment','parser_statements.py',43),
  ('assignment -> assign_targets POWER_ASSIGN expr','assignment',3,'p_assignment','parser_statements.py',44),
  ('atom -> TRUE','atom',1,'p_atom_true','parser_expressions.py',38),
  ('atom -> FALSE','atom',1,'p_atom_false','parser_expressions.py',43),
  ('atom -> NONE','atom',1,'p_atom_none','parser_expressions.py',48),
  ('atom -> ID','atom',1,'p_atom_identifier','parser_expressions.py',53),
  ('assign_targets -> assign_targets ASSIGN target','assign_targets',3,'p_assign_targets','parser_statements.py',54),
  ('assign_targets -> target','assign_targets',1,'p_assign_targets','parser_statements.py',55),
  ('atom -> LPAREN elements_opt RPAREN','atom',3,'p_atom_paren','parser_expressions.py',59),
  ('target -> ID','target',1,'p_target','parser_statements.py',62),
  ('target -> LPAREN elements_opt RPAREN','target',3,'p_target','parser_statements.py',63),
  ('target -> LBRACKET elements_opt RBRACKET','target',3,'p_target','parser_statements.py',64),
  ('target -> target LBRACKET expr RBRACKET','target',4,'p_target','parser_statements.py',65),
  ('target -> target DOT ID','target',3,'p_target','parser_statements.py',66),
  ('atom -> LBRACKET elements_opt RBRACKET','atom',3,'p_atom_list','parser_expressions.py',68),
  ('atom -> LBRACE key_value_list_opt RBRACE','atom',3,'p_atom_dict','parser_expressions.py',73),
  ('expr -> PLUS expr','expr',2,'p_expr_unary_plus','parser_expressions.py',79),
  ('expr -> MINUS expr','expr',2,'p_expr_unary_minus','parser_expressions.py',84),
  ('return_stmt -> RETURN expr','return_stmt',2,'p_return_stmt','parser_statements.py',86),
  ('return_stmt -> RETURN','return_stmt',1,'p_return_stmt','parser_statements.py',87),
  ('expr -> NOT expr','expr',2,'p_expr_unary_not','parser_expressions.py',89),
  ('module -> statement_list','module',1,'p_module','parser.py',93),
  ('break_stmt -> BREAK','break_stmt',1,'p_break_stmt','parser_statements.py',94),
  ('expr -> expr POWER expr','expr',3,'p_expr_power','parser_expressions.py',95),
  ('continue_stmt -> CONTINUE','continue_stmt',1,'p_continue_stmt','parser_statements.py',98),
  ('expr -> expr TIMES expr','expr',3,'p_expr_multiplicative','parser_expressions.py',100),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr_multiplicative','parser_expressions.py',101),
  ('expr -> expr FLOOR_DIVIDE expr','expr',3,'p_expr_multiplicative','parser_expressions.py',102),
  ('expr -> expr MOD expr','expr',3,'p_expr_multiplicative','parser_expressions.py',103),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',102),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',103),
  ('pass_stmt -> PASS','pass_stmt',1,'p_pass_stmt','parser_statements.py',102),
  ('expr -> expr PLUS expr','expr',3,'p_expr_additive','parser_expressions.py',108),
  ('expr -> expr MINUS expr','expr',3,'p_expr_additive','parser_expressions.py',109),
  ('expr -> expr EQUALS expr','expr',3,'p_expr_comparison','parser_expressions.py',115),
  ('expr -> expr NOT_EQUALS expr','expr',3,'p_expr_comparison','parser_expressions.py',116),
  ('expr -> expr LESS_THAN expr','expr',3,'p_expr_comparison','parser_expressions.py',117),
  ('expr -> expr LESS_THAN_EQUALS expr','expr',3,'p_expr_comparison','parser_expressions.py',118),
  ('expr -> expr GREATER_THAN expr','expr',3,'p_expr_comparison','parser_expressions.py',119),
  ('expr -> expr GREATER_THAN_EQUALS expr','expr',3,'p_expr_comparison','parser_expressions.py',120),
  ('expr -> expr AND expr','expr',3,'p_expr_logical','parser_expressions.py',126),
  ('expr -> expr OR expr','expr',3,'p_expr_logical','parser_expressions.py',127),
  ('expr -> atom LPAREN arg_list_opt RPAREN','expr',4,'p_expr_call','parser_expressions.py',133),
  ('arg_list_opt -> expr COMMA arg_list_opt','arg_list_opt',3,'p_arg_list_opt','parser_expressions.py',143),
  ('arg_list_opt -> expr','arg_list_opt',1,'p_arg_list_opt','parser_expressions.py',144),
  ('arg_list_opt -> <empty>','arg_list_opt',0,'p_arg_list_opt_empty','parser_expressions.py',151),
  ('key_value_list -> key_value','key_value_list',1,'p_key_value_list','parser_expressions.py',155),
  ('key_value_list -> key_value COMMA key_value_list','key_value_list',3,'p_key_value_list','parser_expressions.py',156),
  ('key_value_list_opt -> key_value_list','key_value_list_opt',1,'p_key_value_list_opt','parser_expressions.py',163),
  ('key_value_list_opt -> empty','key_value_list_opt',1,'p_key_value_list_opt','parser_expressions.py',164),
  ('key_value -> expr COLON expr','key_value',3,'p_key_value','parser_expressions.py',168),
  ('elements -> expr','elements',1,'p_elements','parser_expressions.py',172),
  ('elements -> elements COMMA expr','elements',3,'p_elements','parser_expressions.py',173),
  ('elements_opt -> elements','elements_opt',1,'p_elements_opt','parser_expressions.py',180),
  ('elements_opt -> empty','elements_opt',1,'p_elements_opt','parser_expressions.py',181),
  ('empty -> <empty>','empty',0,'p_empty','parser_expressions.py',185),
]
